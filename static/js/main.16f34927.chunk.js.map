{"version":3,"sources":["utils.js","components/Slider.js","containers/Sliders.js","assets/downArrow.svg","components/AlgoDropDown.js","assets/menuOpen.svg","assets/menuClose.svg","containers/SideBar.js","components/Header.js","components/BubbleSort.js","components/HeapSort.js","components/MergeSort.js","components/QuickSort.js","containers/Sort.js","containers/ArrayBars.js","containers/Grid.js","containers/App.js","index.js"],"names":["AppContext","React","createContext","inActiveButtonStyle","boxShadow","filter","getBarHeight","bar","size","height","Math","ceil","getBarWidth","length","width","setHeightValue","barWidth","style","fontSize","getBackgroundColor","state","arrayGen","array","range","i","push","floor","random","Slider","memo","name","value","min","max","dispatch","useContext","className","type","onInput","e","target","data","abs","Number","Sliders","types","title","speed","SlidersUI","map","rest","algorithms","current","AlgoDropDown","deadState","algoType","running","containerRef","useRef","optionRef","AlgoDropDownUI","ref","handleClick","setTimeout","classList","toggle","handleChange","id","forwardRef","props","options","algo","onClick","src","DownArrow","alt","SideBar","useState","setDeadState","useEffect","Object","keys","SideBarUI","event","handleVisibility","MenuOpen","MenuClose","Header","buttonStyle","setStyle","wait","setWait","innerText","HeaderUI","Algorithms","pause","BubbleSort","I","setI","J","setJ","paused","setPaused","cords","setCords","setUpdate","setArray","update","prev","setArrayState","index","both","arr","timeOut","func","time","temp","swapAndSetArray","childComponent","childProps","HeapSort","MergeSort","started","setStarted","setIndex","maxIndex","setMaxIndex","sortIndexes","setSortIndexes","merge","setMerge","continueMerge","setContinueMerge","startIndex","setStartIndex","reset","Array","fill","shifter","a","from","to","splice","slicer","QuickSort","quickSort","setQuickSort","pLength","setPLength","sort","setSort","partitionIndex","setPartitionIndex","minMax","setMinMax","swap","index1","index2","indexes","partition","pop","high","Sort","sorterType","setSorterType","ArrayBars","gridSize","ArrayBarsUI","bars","clientHeight","clientWidth","backgroundColor","margin","Grid","setGridSize","newArray","gridRef","window","addEventListener","setWidthHeight","removeEventListener","GridUI","App","setNewArray","setAlgoType","setSize","setSpeed","setRunning","Provider","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16f34927.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AppContext = React.createContext();\nexport const inActiveButtonStyle = {\n\tboxShadow: \"0 0 4px 0px #565656\",\n\tfilter: \"none\",\n};\n\nexport const getBarHeight = (bar, size, height) =>\n\t(bar / (Math.ceil(size / 3) * 100)) * (height * 0.7);\n\nexport const getBarWidth = (length, width) => (width * 0.5) / length;\n\nexport const getBarMargin = (length, width) =>\n\tMath.min((width * 0.24) / length, 20);\n\nexport const setHeightValue = (bar, length, width) => {\n\tconst barWidth = getBarWidth(length, width);\n\tlet size = 20;\n\tif (barWidth > 25) {\n\t\tif (barWidth < 40) size = 12;\n\t\telse if (barWidth < 80) size = 16;\n\t\treturn <p style={{ fontSize: `${size}px` }}>{bar}</p>;\n\t}\n\treturn null;\n};\n\nexport const getBackgroundColor = (state) => {\n\tswitch (state) {\n\t\tcase -1:\n\t\t\treturn \"#A31C1C\"; // red\n\t\tcase 1:\n\t\t\treturn \"#1CA321\"; // green\n\t\tcase 2:\n\t\t\treturn \"#1C21A3\"; // dark-blue\n\t\tdefault:\n\t\t\treturn \"#1C62A3\"; // light-blue\n\t}\n};\n\n/*\n\tArray size\n\t4*1 5*2 6*3 7*4 7*5\t\n\t8*6 9*7 10*8 11*9 12*10\n\t\n\tarray range\n\t(1,2,3) : 10 - 100\n\t(3,4,5) : 10 - 200\n\t(6,7,8) : 10 - 300\n\t(9,10)  : 10 - 400\n\n\tarray state\n\t-1 - wrong\n\t0 - unsorted or untracked\n\t1 - selected \n\t2 - sorted\n\n\n\tresulted array\n\t[[value,0],[value,0],[value,0],[value,0],[value,0]]\n*/\n\nexport const arrayGen = (size) => {\n\tlet array = [];\n\tlet range = (size > 5 ? size + 2 : size + 3) * size;\n\n\tfor (let i = 1; i <= range; i++) {\n\t\tarray.push([\n\t\t\tMath.floor(10 + Math.random() * (Math.ceil(size / 3) * 100 - 10)),\n\t\t\t0,\n\t\t]);\n\t}\n\treturn array;\n};\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../utils\";\n\nconst Slider = React.memo(({ name, value, min = 1, max = 10 }) => {\n\tconst { dispatch } = useContext(AppContext);\n\n\tconst onInput = (e) => {\n\t\tconst { className, value } = e.target;\n\t\tconst data = Math.abs(Number(value));\n\t\tdispatch({ type: className, data });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\tclassName={name}\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin={min}\n\t\t\t\tmax={max}\n\t\t\t\tvalue={value}\n\t\t\t\tonInput={onInput}\n\t\t\t/>\n\t\t</>\n\t);\n});\n\nexport default Slider;\n","import React, { useContext } from \"react\";\n\nimport Slider from \"../components/Slider\";\n\nimport { AppContext } from \"../utils\";\n\nexport default function Sliders() {\n\tconst { size, speed } = useContext(AppContext);\n\tconst types = [\n\t\t{ name: \"size\", title: \"Array size\", value: size },\n\t\t{\n\t\t\tname: \"speed\",\n\t\t\ttitle: \"Sorting speed\",\n\t\t\tvalue: -1 * speed,\n\t\t\tmin: -10,\n\t\t\tmax: -1,\n\t\t},\n\t];\n\treturn <SlidersUI {...{ types }} />;\n}\n\nconst SlidersUI = React.memo(({ types }) => {\n\treturn (\n\t\t<>\n\t\t\t{types.map((type) => {\n\t\t\t\tconst { title, ...rest } = type;\n\t\t\t\treturn (\n\t\t\t\t\t<section key={rest.name} className={`slider_${rest.name}`}>\n\t\t\t\t\t\t<p>{title}</p>\n\t\t\t\t\t\t<Slider {...rest} />\n\t\t\t\t\t</section>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n});\n","export default __webpack_public_path__ + \"static/media/downArrow.cf7bd89e.svg\";","import React, { useContext, useRef } from \"react\";\n\nimport { AppContext } from \"../utils\";\nimport \"../styles/AlgoDropDown.scss\";\nimport DownArrow from \"../assets/downArrow.svg\";\n\nconst algorithms = [\"Merge Sort\", \"Heap Sort\", \"Quick Sort\", \"Bubble Sort\"];\nlet current = \"Type of algorithm\";\n\nexport default function AlgoDropDown({ deadState }) {\n\tconst { algoType, running, dispatch } = useContext(AppContext);\n\n\tconst containerRef = useRef();\n\tconst optionRef = useRef();\n\n\tcurrent = algoType || current;\n\n\tconst handleChange = (e) => {\n\t\toptionRef.current.className = \"algoDropDown_options\";\n\t\tcontainerRef.current.classList.toggle(\"algoDropDown_interaction\");\n\n\t\tsetTimeout(() => {\n\t\t\tcontainerRef.current.classList.toggle(\"algoDropDown_interaction\");\n\t\t}, 100);\n\n\t\tdispatch({ type: \"algoType\", data: e.target.id });\n\t};\n\n\tconst handleClick = () => {\n\t\tif (!running)\n\t\t\tsetTimeout(() => {\n\t\t\t\toptionRef.current.classList.toggle(\n\t\t\t\t\t\"algoDropDown_container_interaction\"\n\t\t\t\t);\n\t\t\t}, 100);\n\t};\n\n\treturn (\n\t\t<AlgoDropDownUI\n\t\t\t{...{\n\t\t\t\tref: { containerRef, optionRef },\n\t\t\t\tdeadState,\n\t\t\t\thandleClick,\n\t\t\t\tcurrent,\n\t\t\t\trunning,\n\t\t\t\thandleChange,\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nconst AlgoDropDownUI = React.forwardRef(\n\t(props, { containerRef, optionRef }) => {\n\t\tconst options = algorithms.map((algo, i) => (\n\t\t\t<li key={i}>\n\t\t\t\t<button id={algo} onClick={props.handleChange}>\n\t\t\t\t\t{algo}\n\t\t\t\t</button>\n\t\t\t\t{i < algorithms.length - 1 && <hr />}\n\t\t\t</li>\n\t\t));\n\n\t\treturn (\n\t\t\t<section\n\t\t\t\tref={containerRef}\n\t\t\t\tclassName=\"algoDropDown_container algoDropDown_interaction\"\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tstyle={props.deadState}\n\t\t\t\t\tclassName=\"algoDropDown_button button-style button-action\"\n\t\t\t\t\tonClick={props.handleClick}\n\t\t\t\t>\n\t\t\t\t\t<p>{props.current}</p>\n\t\t\t\t\t<img src={DownArrow} alt=\"Down Arrow\" />\n\t\t\t\t</button>\n\n\t\t\t\t{!props.running && (\n\t\t\t\t\t<div className=\"algoDropDown_options\" id=\"options\" ref={optionRef}>\n\t\t\t\t\t\t<ul className=\"options\">{options}</ul>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t);\n\t}\n);\n","export default __webpack_public_path__ + \"static/media/menuOpen.db3319ac.svg\";","export default __webpack_public_path__ + \"static/media/menuClose.cba5efdd.svg\";","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport Sliders from \"./Sliders\";\nimport AlgoDropDown from \"../components/AlgoDropDown\";\n\nimport { AppContext, inActiveButtonStyle } from \"../utils\";\nimport \"../styles/SideBar.scss\";\nimport MenuOpen from \"../assets/menuOpen.svg\";\nimport MenuClose from \"../assets/menuClose.svg\";\n\nexport default function SideBar() {\n\tconst [deadState, setDeadState] = useState({});\n\tconst { running, dispatch } = useContext(AppContext);\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tconst length = Object.keys(deadState).length;\n\n\t\tif (running && !length) setDeadState(inActiveButtonStyle);\n\t\telse if (!running && length) setDeadState({});\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [running]);\n\n\tconst handleClick = (event) => {\n\t\tdispatch({ type: \"reset\" });\n\t};\n\n\tconst handleVisibility = () => {\n\t\tref.current.classList.toggle(\"sidebar_container_action\");\n\t};\n\n\treturn <SideBarUI {...{ handleClick, handleVisibility, ref, deadState }} />;\n}\n\nconst SideBarUI = React.forwardRef(\n\t({ handleClick, handleVisibility, deadState }, ref) => {\n\t\treturn (\n\t\t\t<section className=\"Sidebar\">\n\t\t\t\t<button\n\t\t\t\t\tid=\"show\"\n\t\t\t\t\tclassName=\"visibility_button\"\n\t\t\t\t\tonClick={handleVisibility}\n\t\t\t\t>\n\t\t\t\t\t<img src={MenuOpen} alt=\"open\" />\n\t\t\t\t</button>\n\n\t\t\t\t<div ref={ref} className=\"sidebar_container\">\n\t\t\t\t\t<section className=\"sidebar_main\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={deadState}\n\t\t\t\t\t\t\tclassName=\"newArray button-style button-action\"\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p>New Array</p>\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<AlgoDropDown deadState={deadState} />\n\t\t\t\t\t\t<Sliders />\n\n\t\t\t\t\t\t<button className=\"visibility_button\" onClick={handleVisibility}>\n\t\t\t\t\t\t\t<img src={MenuClose} alt=\"close\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n);\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport { AppContext, inActiveButtonStyle } from \"../utils\";\nimport \"../styles/Header.scss\";\n\nexport default function Header() {\n\tconst [buttonStyle, setStyle] = useState(inActiveButtonStyle);\n\tconst { algoType, running, dispatch } = useContext(AppContext);\n\tconst ref = useRef();\n\tconst [wait, setWait] = useState(false);\n\tconst length = Object.keys(buttonStyle).length;\n\n\tuseEffect(() => {\n\t\tif (!algoType && !length) setStyle(inActiveButtonStyle);\n\t\telse if (algoType && length) setStyle({});\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [algoType]);\n\n\tuseEffect(() => {\n\t\tif (wait && !length) {\n\t\t\tsetStyle(inActiveButtonStyle);\n\t\t} else if (!wait && length && algoType) {\n\t\t\tsetStyle({});\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [wait]);\n\n\tuseEffect(() => {\n\t\tif (ref.current) ref.current.innerText = running ? \"stop\" : \"start\";\n\t}, [running]);\n\n\tconst handleChange = () => {\n\t\tif (!wait) {\n\t\t\tif (ref.current.innerText === \"stop\") {\n\t\t\t\tsetWait(true);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetWait(false);\n\t\t\t\t}, [500]);\n\t\t\t}\n\n\t\t\tif (ref.current.innerText === \"stop\" && Algorithms[algoType].pause)\n\t\t\t\tdispatch({ type: ref.current.innerText });\n\t\t\telse if (ref.current.innerText === \"start\")\n\t\t\t\tdispatch({ type: ref.current.innerText });\n\t\t}\n\t};\n\n\treturn <HeaderUI {...{ buttonStyle, handleChange, ref }} />;\n}\n\nconst HeaderUI = React.forwardRef(({ buttonStyle, handleChange }, ref) => {\n\treturn (\n\t\t<header className=\"MainHeader\">\n\t\t\t<div className=\"app_name\">\n\t\t\t\t<h1>Sorting Algorithm Visualizer</h1>\n\t\t\t</div>\n\n\t\t\t<div className=\"divider\"></div>\n\n\t\t\t<div className=\"start_container\">\n\t\t\t\t<button\n\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\tclassName=\"start button-style button-action\"\n\t\t\t\t\tonClick={handleChange}\n\t\t\t\t>\n\t\t\t\t\t<p ref={ref}>start</p>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</header>\n\t);\n});\n\nconst Algorithms = {\n\t\"Merge Sort\": {\n\t\tpause: true,\n\t},\n\t\"Bubble Sort\": {\n\t\tpause: true,\n\t},\n\t\"Quick Sort\": {\n\t\tpause: false,\n\t},\n\t\"Heap Sort\": {\n\t\tpause: false,\n\t},\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../utils\";\n\nexport default function BubbleSort(props) {\n\tconst [I, setI] = useState(-1);\n\tconst [J, setJ] = useState(-1);\n\tconst [paused, setPaused] = useState(false);\n\tconst [cords, setCords] = useState({ I: -1, J: -1 });\n\tconst [, setUpdate] = useState(true);\n\n\tconst { array, running, speed, dispatch } = useContext(AppContext);\n\tconst length = array.length;\n\n\t/**\n\t * \t\tLogic\n\t */\n\n\t// reset values if size, array or algorithm are changed\n\tuseEffect(() => {\n\t\tif (paused) reset();\n\t}, [array]);\n\n\t// Controls running state\n\tuseEffect(() => {\n\t\tif (paused && running) setI(-100);\n\t\telse if (running)\n\t\t\tif (I === -1) setI(0);\n\t\t\telse setI((prev) => prev);\n\t\telse if (I > -1) {\n\t\t\tsetPaused(true);\n\t\t\tconst j = J > -1 ? J : 0;\n\t\t\tsetCords({ I, J: j });\n\t\t}\n\t}, [running]);\n\n\t// outer for loop\n\tuseEffect(() => {\n\t\tif (I === -100) setI(cords.I);\n\t\telse if (running) {\n\t\t\tif (I >= length - 1) {\n\t\t\t\tdispatch({ type: \"stop\" });\n\t\t\t\tsetI(-1);\n\t\t\t\tsetJ(-1);\n\t\t\t} else if (paused) {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tsetJ(-100);\n\t\t\t\t\tsetPaused(false);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tsetJ(0);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [I]);\n\n\t// inner for loop\n\tuseEffect(() => {\n\t\tif (J === -100) setJ(cords.J);\n\t\telse if (running && I >= 0)\n\t\t\tif (J >= length - I - 1) {\n\t\t\t\tif (J === 1) setArrayState(J - 1, 2, true, false);\n\t\t\t\telse setArrayState(J, 2, false, false);\n\n\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t} else {\n\t\t\t\tsetArrayState(J, 1);\n\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tif (array[J][0] > array[J + 1][0]) {\n\t\t\t\t\t\tsetArrayState(J, -1);\n\n\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\tswapAndSetArray(J);\n\n\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\tsetArrayState(J, 1);\n\n\t\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\t\tsetArrayState(J, 0, false, false);\n\t\t\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetArrayState(J, 0, false, false);\n\n\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t}, [J]);\n\n\t/**\n\t * \t\tHelper functions\n\t */\n\n\t/**\n\t * set's default values\n\t */\n\tfunction reset() {\n\t\tsetI(-1);\n\t\tsetJ(-1);\n\t\tsetPaused(false);\n\t\tsetCords({ I: -1, J: -1 });\n\t}\n\n\t/**\n\t * force re-render component using state\n\t */\n\tfunction forceUpdate() {\n\t\tsetUpdate((prev) => !prev);\n\t}\n\n\t/**\n\t *\tdispatches and re-render the component\n\t *\n\t * @param {array} array global state array\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArray(array, update) {\n\t\tdispatch({ type: \"array\", data: array });\n\t\tif (update) forceUpdate();\n\t}\n\n\t/**\n\t *\tset's the array state\n\t *\n\t * @param {number} index index of value to be change\n\t * @param {number} state state value to set on the index\n\t * @param {boolean} both whether to update index and index+1\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArrayState(index, state, both = true, update = true) {\n\t\tlet arr = array;\n\t\tif (both) {\n\t\t\tarr[index][1] = state;\n\t\t\tarr[index + 1][1] = state;\n\t\t} else {\n\t\t\tarr[index][1] = state;\n\t\t}\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t * swap and update array values and\n\t * re-renders the component\n\t *\n\t * @param {number} index index to be swapped\n\t */\n\tfunction swapAndSetArray(index) {\n\t\tlet arr = array;\n\t\tlet temp = arr[index][0];\n\t\tarr[index][0] = arr[index + 1][0];\n\t\tarr[index + 1][0] = temp;\n\t\tsetArray(arr, true);\n\t}\n\n\t/**\n\t * run a function after specific time interval\n\t * @param {function} func function to run\n\t * @param {number} time timeInterval\n\t */\n\tfunction timeOut(func, time = 4 * speed ** 2) {\n\t\tsetTimeout(() => {\n\t\t\tif (running) {\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}, time);\n\t}\n\n\treturn <props.childComponent {...props.childProps} />;\n}\n","import React from \"react\";\n\nexport default function HeapSort() {\n\treturn <div></div>;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../utils\";\n\nexport default function MergeSort(props) {\n\tconst { array, running, speed, dispatch } = useContext(AppContext);\n\tconst length = array.length;\n\n\tconst [, setUpdate] = useState(true);\n\tconst [paused, setPaused] = useState(false);\n\tconst [started, setStarted] = useState(false);\n\tconst [cords, setCords] = useState(false);\n\n\t// Sort\n\tconst [index, setIndex] = useState();\n\tconst [maxIndex, setMaxIndex] = useState();\n\tconst [sortIndexes, setSortIndexes] = useState();\n\n\t//merge\n\tconst [merge, setMerge] = useState(false);\n\tconst [continueMerge, setContinueMerge] = useState(false);\n\tconst [startIndex, setStartIndex] = useState();\n\tconst [I, setI] = useState(-1);\n\tconst [J, setJ] = useState(-1);\n\n\tuseEffect(() => {\n\t\tif (!running) reset();\n\t}, [array]);\n\n\t// controller\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tsetStarted(true);\n\t\t\tsetIndex(1);\n\t\t\tsetMaxIndex(2);\n\t\t} else if (!running && started) {\n\t\t\tsetMerge(false);\n\t\t\tsetPaused(true);\n\t\t} else if (running && paused) {\n\t\t\tsetMerge(false);\n\t\t\tsetPaused(false);\n\t\t}\n\t}, [running]);\n\n\t// merge Sort\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tif (index === 0) {\n\t\t\t\tif (maxIndex === length) {\n\t\t\t\t\treset();\n\t\t\t\t\tdispatch({ type: \"stop\" });\n\t\t\t\t} else {\n\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\tsetMaxIndex((prev) => prev + 2);\n\t\t\t\t\t\tsetIndex(2);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tsortIndexes[index - 1] === sortIndexes[index] ||\n\t\t\t\t\t\tmaxIndex === length\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetI(maxIndex - (sortIndexes[index] + sortIndexes[index - 1]));\n\t\t\t\t\t\tsetJ(maxIndex - sortIndexes[index]);\n\t\t\t\t\t\tsetMerge(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetMaxIndex((prev) => prev + 1);\n\t\t\t\t\t\tsetIndex((prev) => prev + 1);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [index, paused]);\n\n\t// merge\n\tuseEffect(() => {\n\t\tif (merge) {\n\t\t\tif (cords) {\n\t\t\t\tsetI(cords.I);\n\t\t\t\tsetJ(cords.J);\n\t\t\t\tsetCords(false);\n\t\t\t} else {\n\t\t\t\tsetStartIndex(I);\n\t\t\t\tsetArrayState(I, maxIndex, 1);\n\t\t\t}\n\t\t\ttimeOut(() => {\n\t\t\t\tsetContinueMerge((prev) => !prev);\n\t\t\t});\n\t\t}\n\t}, [merge]);\n\n\t// sort\n\tuseEffect(() => {\n\t\tif (merge && running) {\n\t\t\ttimeOut(() => {\n\t\t\t\tif (I < J && J < maxIndex) {\n\t\t\t\t\tif (array[I][0] <= array[J][0]) {\n\t\t\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t\t\t\tsetContinueMerge((prev) => !prev);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (array[I][1] !== -1) setArrayState(startIndex, maxIndex, -1);\n\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\tdispatch({ type: \"array\", data: shifter(I, J) });\n\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t\t\t\t\tsetContinueMerge((prev) => !prev);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (I === J || J === maxIndex) {\n\t\t\t\t\tif (index === 1 && maxIndex === length) {\n\t\t\t\t\t\tsetArrayState(0, maxIndex, 2);\n\t\t\t\t\t\treturn setIndex((prev) => prev - 1);\n\t\t\t\t\t} else setArrayState(startIndex, maxIndex, 0);\n\n\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\tsetSortIndexes(slicer());\n\t\t\t\t\t\tsetMerge(false);\n\t\t\t\t\t\tsetIndex((prev) => prev - 1);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (I !== -1 && J !== -1 && paused) {\n\t\t\tsetCords({ I, J });\n\t\t}\n\t}, [continueMerge]);\n\n\t/**\n\t * Helper functions\n\t */\n\n\t/**\n\t * set's default values\n\t */\n\tfunction reset() {\n\t\tsetSortIndexes(new Array(array.length).fill(1));\n\t\tsetI(-1);\n\t\tsetJ(-1);\n\t\tsetCords(false);\n\t\tsetMerge(false);\n\t\tsetStarted(false);\n\t\tsetPaused(false);\n\t}\n\n\t/**\n\t * run a function after specific time interval\n\t * @param {function} func function to run\n\t * @param {number} time timeInterval\n\t */\n\tfunction timeOut(func, time = 4 * speed ** 2) {\n\t\tsetTimeout(() => {\n\t\t\tif (running) {\n\t\t\t\tfunc();\n\t\t\t} else {\n\t\t\t\tsetCords({ I, J });\n\t\t\t}\n\t\t}, time);\n\t}\n\n\t/**\n\t * slice and increment array element\n\t *\n\t * @returns {array} array with sliced index\n\t */\n\tfunction slicer() {\n\t\tlet arr = sortIndexes;\n\t\tarr[index - 1] += arr[index];\n\t\tarr.splice(index, 1);\n\t\treturn arr;\n\t}\n\n\t/**\n\t *\n\t * @param {number} I index of first element\n\t * @param {number} J index of last element\n\t * @returns {array} array with shifted element\n\t */\n\tfunction shifter(I, J) {\n\t\tlet arr = array;\n\t\tlet temp = arr[J];\n\t\tfor (let a = J; a > I; a--) {\n\t\t\tarr[a] = arr[a - 1];\n\t\t}\n\t\tarr[I] = temp;\n\t\treturn arr;\n\t}\n\n\t/**\n\t *\tset's the array state\n\t *\n\t * @param {number} from starting Index\n\t * @param {boolean} to ending Index\n\t * @param {number} state state value to set on the index\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArrayState(from, to, state, update = true) {\n\t\tlet arr = array;\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tarr[i][1] = state;\n\t\t}\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t *\tdispatches and re-render the component\n\t *\n\t * @param {array} array global state array\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArray(array, update) {\n\t\tdispatch({ type: \"array\", data: array });\n\t\tif (update) setUpdate((prev) => !prev);\n\t}\n\n\treturn <props.childComponent {...props.childProps} />;\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../utils\";\n\nexport default function QuickSort(props) {\n\tconst { array, running, speed, dispatch } = useContext(AppContext);\n\tconst length = array.length;\n\n\tconst [, setUpdate] = useState(true);\n\tconst [paused, setPaused] = useState(false);\n\t//quick\n\tconst [quickSort, setQuickSort] = useState(false);\n\tconst [pLength, setPLength] = useState();\n\tconst [sort, setSort] = useState(false);\n\tconst [partitionIndex, setPartitionIndex] = useState();\n\tconst [minMax, setMinMax] = useState();\n\n\tconst [I, setI] = useState(-1);\n\tconst [J, setJ] = useState(-1);\n\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tsetPartitionIndex([[-1, 1]]);\n\t\t\tsetMinMax([[0, length]]);\n\t\t\tsetPLength(1);\n\t\t\tsetSort(true);\n\t\t}\n\t}, [running]);\n\n\tuseEffect(() => {\n\t\tif (running) {\n\t\t\tlet partition = partitionIndex;\n\t\t\tlet range = minMax;\n\t\t\tlet index = I + 1;\n\n\t\t\tif (index === -10) {\n\t\t\t\tif (partition[pLength - 1][1] === 0) {\n\t\t\t\t\tpartition[pLength - 1][1] = 1;\n\n\t\t\t\t\trange.pop();\n\t\t\t\t\trange.push([partition[pLength - 1][0] + 1, range[pLength - 2][1]]);\n\n\t\t\t\t\tsetPartitionIndex(partition);\n\t\t\t\t\tsetMinMax(range);\n\t\t\t\t\tsetSort(true);\n\t\t\t\t} else if (pLength === 1) {\n\t\t\t\t\tdispatch({ type: \"stop\" });\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tpartition.pop();\n\t\t\t\t\trange.pop();\n\n\t\t\t\t\tsetPartitionIndex(partition);\n\t\t\t\t\tsetMinMax(range);\n\t\t\t\t\tsetPLength((prev) => prev - 1);\n\t\t\t\t\tsetQuickSort((prev) => !prev);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (partition[pLength - 1][1] === 0)\n\t\t\t\t\trange.push([range[pLength - 1][0], index]);\n\t\t\t\telse range.push([range[pLength - 1][0], index]);\n\n\t\t\t\tpartition.push([index, 0]);\n\n\t\t\t\tsetPartitionIndex(partition);\n\t\t\t\tsetMinMax(range);\n\t\t\t\tsetPLength((prev) => prev + 1);\n\t\t\t\tsetSort(true);\n\t\t\t}\n\t\t}\n\t}, [quickSort]);\n\n\tuseEffect(() => {\n\t\tif (sort) {\n\t\t\tconst range = minMax[pLength - 1];\n\t\t\tif (range[1] - range[0] < 2) {\n\t\t\t\trange[0] < length && setArrayState([range[0]], 2);\n\t\t\t\tsetI(-11);\n\t\t\t\tsetQuickSort((prev) => !prev);\n\t\t\t\tsetSort(false);\n\t\t\t} else {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tsetArrayState([range[1] - 1], 1, true);\n\n\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\tsetI(range[0] - 1);\n\t\t\t\t\t\tsetJ(range[0]);\n\t\t\t\t\t\tsetSort(false);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [sort]);\n\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tlet high = minMax[pLength - 1][1] - 1;\n\t\t\tif (J < high) {\n\t\t\t\tsetArrayState([I + 1, J], 1, true);\n\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tif (array[J][0] < array[high][0]) {\n\t\t\t\t\t\tif (I + 1 !== J) setArrayState([I + 1, J], -1, true);\n\n\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\tdispatch({ type: \"array\", data: swap(I + 1, J) });\n\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\tsetArrayState([I + 1, J], 1, true);\n\n\t\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\t\tsetArrayState([I + 1, J], 0);\n\t\t\t\t\t\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetArrayState([I + 1, J], 0);\n\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetArrayState([high], 2);\n\t\t\t\tdispatch({ type: \"array\", data: swap(I + 1, high) });\n\t\t\t\tsetQuickSort((prev) => !prev);\n\t\t\t}\n\t\t}\n\t}, [J]);\n\n\t/**\n\t * swap array values\n\t * @param {number} index1 First index\n\t * @param {number} index2 Second index\n\t * @returns {array} updated array\n\t */\n\tfunction swap(index1, index2) {\n\t\tlet arr = array;\n\t\tlet temp = arr[index1];\n\t\tarr[index1] = arr[index2];\n\t\tarr[index2] = temp;\n\t\treturn arr;\n\t}\n\n\t/**\n\t * run a function after specific time interval\n\t * @param {function} func function to run\n\t * @param {number} time timeInterval\n\t */\n\tfunction timeOut(func, time = 4 * speed ** 2) {\n\t\tsetTimeout(() => {\n\t\t\tif (running) {\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}, time);\n\t}\n\n\t/**\n\t *\tset's the array state\n\t *\n\t * @param {number} from starting Index\n\t * @param {boolean} to ending Index\n\t * @param {number} state state value to set on the index\n\t * @param {boolean} update should component re-render\n\t */\n\n\tfunction setArrayState(indexes, state, update = false) {\n\t\tlet arr = array;\n\t\tfor (const index of indexes) {\n\t\t\tarr[index][1] = state;\n\t\t}\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t *\tdispatches and re-render the component\n\t *\n\t * @param {array} array global state array\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArray(array, update) {\n\t\tdispatch({ type: \"array\", data: array });\n\t\tif (update) setUpdate((prev) => !prev);\n\t}\n\n\treturn <props.childComponent {...props.childProps} />;\n}\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport BubbleSort from \"../components/BubbleSort\";\nimport HeapSort from \"../components/HeapSort\";\nimport MergeSort from \"../components/MergeSort\";\nimport QuickSort from \"../components/QuickSort\";\n\nimport { AppContext } from \"../utils\";\n\nexport default function Sort(props) {\n\tconst { algoType } = useContext(AppContext);\n\tconst [sorterType, setSorterType] = useState();\n\n\tuseEffect(() => {\n\t\tif (sorterType !== algoType) {\n\t\t\tsetSorterType(algoType);\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [algoType]);\n\n\tswitch (sorterType) {\n\t\tcase \"Merge Sort\":\n\t\t\treturn <MergeSort {...props} />;\n\t\tcase \"Heap Sort\":\n\t\t\treturn <HeapSort {...props} />;\n\t\tcase \"Quick Sort\":\n\t\t\treturn <QuickSort {...props} />;\n\t\tcase \"Bubble Sort\":\n\t\t\treturn <BubbleSort {...props} />;\n\t\tdefault:\n\t\t\treturn <props.childComponent {...props.childProps} />;\n\t}\n}\n","import React, { useContext } from \"react\";\nimport {\n\tAppContext,\n\tgetBackgroundColor,\n\tgetBarHeight,\n\tgetBarMargin,\n\tgetBarWidth,\n\tsetHeightValue,\n} from \"../utils\";\nimport Sort from \"./Sort\";\n\n// FIXME - passing ArrayBarUI as children doesn't updates the UI\nexport default function ArrayBars({ gridSize }) {\n\tconst { array, size } = useContext(AppContext);\n\n\tconst props = {\n\t\tchildProps: { array, gridSize, size },\n\t\tchildComponent: ArrayBarsUI,\n\t};\n\n\treturn <Sort {...props} />;\n}\n\nfunction ArrayBarsUI({ array, gridSize, size }) {\n\treturn (\n\t\t<>\n\t\t\t{array.map((bar, i, bars) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"bar\"\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tid={`${bar[0]} ${gridSize.clientHeight} ${size}`}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: `${getBarHeight(bar[0], size, gridSize.clientHeight)}px`,\n\t\t\t\t\t\t\twidth: `${getBarWidth(bars.length, gridSize.clientWidth)}px`,\n\t\t\t\t\t\t\tbackgroundColor: `${getBackgroundColor(bar[1])}`,\n\t\t\t\t\t\t\tmargin: `${getBarMargin(bars.length, gridSize.clientWidth)}px`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{setHeightValue(bar[0], bars.length, gridSize.clientWidth)}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport ArrayBars from \"../containers/ArrayBars\";\n\nimport \"../styles/Grid.scss\";\nimport { AppContext, arrayGen } from \"../utils\";\n\nexport default function Grid() {\n\tconst [gridSize, setGridSize] = useState();\n\tconst { newArray, size, dispatch } = useContext(AppContext);\n\tconst gridRef = useRef();\n\n\tuseEffect(() => {\n\t\tif (newArray) {\n\t\t\tdispatch({ type: \"array\", data: arrayGen(size) });\n\t\t\tdispatch({ type: \"reset\" });\n\t\t}\n\t}, [newArray, size, dispatch]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", setWidthHeight);\n\t\tsetWidthHeight();\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", setWidthHeight);\n\t\t};\n\t}, []);\n\n\tconst setWidthHeight = () => {\n\t\tconst { clientWidth, clientHeight } = gridRef.current;\n\t\tsetGridSize({ clientWidth, clientHeight });\n\t};\n\n\treturn <GridUI {...{ gridSize, ref: gridRef }} />;\n}\n\nconst GridUI = React.forwardRef(({ gridSize }, gridRef) => {\n\treturn (\n\t\t<div className=\"Grid\">\n\t\t\t<div ref={gridRef} className=\"grid_container\">\n\t\t\t\t<div className=\"ruler\"></div>\n\t\t\t\t<div className=\"arrayBars\">\n\t\t\t\t\t<ArrayBars {...{ gridSize }} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n","import React, { useState } from \"react\";\n\nimport SideBar from \"./SideBar\";\nimport Header from \"../components/Header\";\nimport Grid from \"../containers/Grid\";\n\nimport { AppContext } from \"../utils\";\nimport \"../styles/App.scss\";\n\nexport default function App() {\n\t// states\n\tconst [newArray, setNewArray] = useState(true);\n\tconst [algoType, setAlgoType] = useState(\"\");\n\tconst [size, setSize] = useState(2); // 1-10\n\tconst [speed, setSpeed] = useState(8); // 10 - 1\n\tconst [running, setRunning] = useState(false);\n\tconst [array, setArray] = useState([]);\n\n\tconst dispatch = ({ type, data }) => {\n\t\tswitch (type) {\n\t\t\tcase \"reset\":\n\t\t\t\tif (!running) setNewArray((prev) => !prev);\n\t\t\t\tbreak;\n\t\t\tcase \"algoType\":\n\t\t\t\tif (!running) setAlgoType(data);\n\t\t\t\tbreak;\n\t\t\tcase \"size\":\n\t\t\t\tif (!running) {\n\t\t\t\t\tsetNewArray(true);\n\t\t\t\t\tsetSize(data);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"speed\":\n\t\t\t\tsetSpeed(data);\n\t\t\t\tbreak;\n\t\t\tcase \"start\":\n\t\t\t\tif (algoType !== \"\") setRunning(true);\n\t\t\t\tbreak;\n\t\t\tcase \"stop\":\n\t\t\t\tif (algoType !== \"\") setRunning(false);\n\t\t\t\tbreak;\n\t\t\tcase \"array\":\n\t\t\t\tif (running || newArray) setArray(data);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"What are you doing?\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AppContext.Provider\n\t\t\t\tvalue={{ newArray, size, speed, running, algoType, dispatch, array }}\n\t\t\t>\n\t\t\t\t<Header />\n\t\t\t\t<main className=\"Main\">\n\t\t\t\t\t<Grid />\n\t\t\t\t\t<SideBar />\n\t\t\t\t</main>\n\t\t\t</AppContext.Provider>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}