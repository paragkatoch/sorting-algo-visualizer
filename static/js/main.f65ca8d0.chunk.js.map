{"version":3,"sources":["utils.js","components/Slider.js","containers/Sliders.js","components/AlgoDropDown.js","containers/SideBar.js","components/Header.js","components/BubbleSort.js","components/HeapSort.js","components/MergeSort.js","components/QuickSort.js","containers/Sort.js","containers/ArrayBars.js","containers/Grid.js","containers/App.js","index.js"],"names":["AppContext","React","createContext","inActiveButtonStyle","boxShadow","filter","getBarHeight","bar","size","height","Math","ceil","getBarWidth","length","width","setHeightValue","barWidth","style","fontSize","getBackgroundColor","state","arrayGen","array","range","i","push","floor","random","Slider","memo","name","value","min","max","dispatch","useContext","className","type","onInput","e","target","data","abs","Number","Sliders","types","title","speed","SlidersUI","map","rest","algorithms","current","AlgoDropDown","deadState","algoType","running","containerRef","useRef","optionRef","AlgoDropDownUI","handleClick","setTimeout","classList","toggle","handleChange","id","props","options","algo","onClick","ref","src","alt","SideBar","useState","setDeadState","useEffect","Object","keys","SideBarUI","event","handleVisibility","forwardRef","Header","buttonStyle","setStyle","innerText","HeaderUI","console","log","BubbleSort","setI","j","setJ","paused","setPaused","cords","setCords","setUpdate","newArray","sortingSpeed","reset","setArray","update","prev","setArrayState","index","both","arr","temp","swapAndSetArray","childComponent","childProps","HeapSort","MergeSort","QuickSort","Sort","sorterType","setSorterType","ArrayBars","gridSize","ArrayBarsUI","bars","clientHeight","clientWidth","backgroundColor","margin","Grid","setGridSize","gridRef","window","addEventListener","setWidthHeight","removeEventListener","GridUI","App","setNewArray","setAlgoType","setSize","setSpeed","setRunning","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f65ca8d0.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AppContext = React.createContext();\nexport const inActiveButtonStyle = {\n\tboxShadow: \"0 0 4px 0px #565656\",\n\tfilter: \"none\",\n};\n\nexport const getBarHeight = (bar, size, height) =>\n\t(bar / (Math.ceil(size / 3) * 100)) * (height * 0.7);\n\nexport const getBarWidth = (length, width) => (width * 0.5) / length;\n\nexport const getBarMargin = (length, width) =>\n\tMath.min((width * 0.24) / length, 20);\n\nexport const setHeightValue = (bar, length, width) => {\n\tconst barWidth = getBarWidth(length, width);\n\tlet size = 20;\n\tif (barWidth > 25) {\n\t\tif (barWidth < 40) size = 12;\n\t\telse if (barWidth < 80) size = 16;\n\t\treturn <p style={{ fontSize: `${size}px` }}>{bar}</p>;\n\t}\n\treturn null;\n};\n\nexport const getBackgroundColor = (state) => {\n\tswitch (state) {\n\t\tcase -1:\n\t\t\treturn \"#A31C1C\"; // red\n\t\tcase 1:\n\t\t\treturn \"#1CA321\"; // green\n\t\tcase 2:\n\t\t\treturn \"#1C21A3\"; // dark-blue\n\t\tdefault:\n\t\t\treturn \"#1C62A3\"; // light-blue\n\t}\n};\n\n/*\n\tArray size\n\t4*1 5*2 6*3 7*4 7*5\t\n\t8*6 9*7 10*8 11*9 12*10\n\t\n\tarray range\n\t(1,2,3) : 10 - 100\n\t(3,4,5) : 10 - 200\n\t(6,7,8) : 10 - 300\n\t(9,10)  : 10 - 400\n\n\tarray state\n\t-1 - wrong\n\t0 - unsorted or untracked\n\t1 - selected \n\t2 - sorted\n\n\n\tresulted array\n\t[[value,0],[value,0],[value,0],[value,0],[value,0]]\n*/\n\nexport const arrayGen = (size) => {\n\tlet array = [];\n\tlet range = (size > 5 ? size + 2 : size + 3) * size;\n\n\tfor (let i = 1; i <= range; i++) {\n\t\tarray.push([\n\t\t\tMath.floor(10 + Math.random() * (Math.ceil(size / 3) * 100 - 10)),\n\t\t\t0,\n\t\t]);\n\t}\n\treturn array;\n};\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../utils\";\n\nconst Slider = React.memo(({ name, value, min = 1, max = 10 }) => {\n\tconst { dispatch } = useContext(AppContext);\n\n\tconst onInput = (e) => {\n\t\tconst { className, value } = e.target;\n\t\tconst data = Math.abs(Number(value));\n\t\tdispatch({ type: className, data });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\tclassName={name}\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin={min}\n\t\t\t\tmax={max}\n\t\t\t\tvalue={value}\n\t\t\t\tonInput={onInput}\n\t\t\t/>\n\t\t</>\n\t);\n});\n\nexport default Slider;\n","import React, { useContext } from \"react\";\n\nimport Slider from \"../components/Slider\";\n\nimport { AppContext } from \"../utils\";\n\nexport default function Sliders() {\n\tconst { size, speed } = useContext(AppContext);\n\tconst types = [\n\t\t{ name: \"size\", title: \"Array size\", value: size },\n\t\t{\n\t\t\tname: \"speed\",\n\t\t\ttitle: \"Sorting speed\",\n\t\t\tvalue: -1 * speed,\n\t\t\tmin: -10,\n\t\t\tmax: -1,\n\t\t},\n\t];\n\treturn <SlidersUI {...{ types }} />;\n}\n\nconst SlidersUI = React.memo(({ types }) => {\n\treturn (\n\t\t<>\n\t\t\t{types.map((type) => {\n\t\t\t\tconst { title, ...rest } = type;\n\t\t\t\treturn (\n\t\t\t\t\t<section key={rest.name} className={`slider_${rest.name}`}>\n\t\t\t\t\t\t<p>{title}</p>\n\t\t\t\t\t\t<Slider {...rest} />\n\t\t\t\t\t</section>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n});\n","import React, { useContext, useRef } from \"react\";\n\nimport { AppContext } from \"../utils\";\nimport \"../styles/AlgoDropDown.scss\";\n\nconst algorithms = [\"Merge Sort\", \"Heap Sort\", \"Quick Sort\", \"Bubble Sort\"];\nlet current = \"Type of algorithm\";\n\nexport default function AlgoDropDown({ deadState }) {\n\tconst { algoType, running, dispatch } = useContext(AppContext);\n\n\tconst containerRef = useRef();\n\tconst optionRef = useRef();\n\n\tcurrent = algoType || current;\n\n\tconst handleChange = (e) => {\n\t\toptionRef.current.className = \"algoDropDown_options\";\n\t\tcontainerRef.current.classList.toggle(\"algoDropDown_interaction\");\n\n\t\tsetTimeout(() => {\n\t\t\tcontainerRef.current.classList.toggle(\"algoDropDown_interaction\");\n\t\t}, 100);\n\n\t\tdispatch({ type: \"algoType\", data: e.target.id });\n\t};\n\n\tconst handleClick = () => {\n\t\tif (!running)\n\t\t\tsetTimeout(() => {\n\t\t\t\toptionRef.current.classList.toggle(\n\t\t\t\t\t\"algoDropDown_container_interaction\"\n\t\t\t\t);\n\t\t\t}, 100);\n\t};\n\n\treturn (\n\t\t<AlgoDropDownUI\n\t\t\t{...{\n\t\t\t\tcontainerRef,\n\t\t\t\tdeadState,\n\t\t\t\thandleClick,\n\t\t\t\tcurrent,\n\t\t\t\trunning,\n\t\t\t\toptionRef,\n\t\t\t\thandleChange,\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nconst AlgoDropDownUI = React.memo((props) => {\n\tconst options = algorithms.map((algo, i) => (\n\t\t<li key={i}>\n\t\t\t<button id={algo} onClick={props.handleChange}>\n\t\t\t\t{algo}\n\t\t\t</button>\n\t\t\t{i < algorithms.length - 1 && <hr />}\n\t\t</li>\n\t));\n\n\treturn (\n\t\t<section\n\t\t\tref={props.containerRef}\n\t\t\tclassName=\"algoDropDown_container algoDropDown_interaction\"\n\t\t>\n\t\t\t<button\n\t\t\t\tstyle={props.deadState}\n\t\t\t\tclassName=\"algoDropDown_button button-style button-action\"\n\t\t\t\tonClick={props.handleClick}\n\t\t\t>\n\t\t\t\t<p>{props.current}</p>\n\t\t\t\t<img src=\"/sorting-algo-visualizer/downArrow.svg\" alt=\"Down Arrow\" />\n\t\t\t</button>\n\n\t\t\t{!props.running && (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"algoDropDown_options\"\n\t\t\t\t\tid=\"options\"\n\t\t\t\t\tref={props.optionRef}\n\t\t\t\t>\n\t\t\t\t\t<ul className=\"options\">{options}</ul>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</section>\n\t);\n});\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport Sliders from \"./Sliders\";\nimport AlgoDropDown from \"../components/AlgoDropDown\";\n\nimport { AppContext, inActiveButtonStyle } from \"../utils\";\nimport \"../styles/SideBar.scss\";\n\nexport default function SideBar() {\n\tconst [deadState, setDeadState] = useState({});\n\tconst { running, dispatch } = useContext(AppContext);\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tconst length = Object.keys(deadState).length;\n\n\t\tif (running && !length) setDeadState(inActiveButtonStyle);\n\t\telse if (!running && length) setDeadState({});\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [running]);\n\n\tconst handleClick = (event) => {\n\t\tdispatch({ type: \"reset\" });\n\t};\n\n\tconst handleVisibility = () => {\n\t\tref.current.classList.toggle(\"sidebar_container_action\");\n\t};\n\n\treturn <SideBarUI {...{ handleClick, handleVisibility, ref, deadState }} />;\n}\n\nconst SideBarUI = React.forwardRef(\n\t({ handleClick, handleVisibility, deadState }, ref) => {\n\t\treturn (\n\t\t\t<section className=\"Sidebar\">\n\t\t\t\t<button\n\t\t\t\t\tid=\"show\"\n\t\t\t\t\tclassName=\"visibility_button\"\n\t\t\t\t\tonClick={handleVisibility}\n\t\t\t\t>\n\t\t\t\t\t<img src=\"/sorting-algo-visualizer/menuOpen.svg\" alt=\"0pen\" />\n\t\t\t\t</button>\n\n\t\t\t\t<div ref={ref} className=\"sidebar_container\">\n\t\t\t\t\t<section className=\"sidebar_main\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={deadState}\n\t\t\t\t\t\t\tclassName=\"newArray button-style button-action\"\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p>New Array</p>\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<AlgoDropDown deadState={deadState} />\n\t\t\t\t\t\t<Sliders />\n\n\t\t\t\t\t\t<button className=\"visibility_button\" onClick={handleVisibility}>\n\t\t\t\t\t\t\t<img src=\"/sorting-algo-visualizer/menuClose.svg\" alt=\"olose\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n);\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport { AppContext, inActiveButtonStyle } from \"../utils\";\nimport \"../styles/Header.scss\";\n\nexport default function Header() {\n\tconst [buttonStyle, setStyle] = useState(inActiveButtonStyle);\n\tconst { algoType, running, dispatch } = useContext(AppContext);\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tconst length = Object.keys(buttonStyle).length;\n\n\t\tif (!algoType && !length) setStyle(inActiveButtonStyle);\n\t\telse if (algoType && length) setStyle({});\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [algoType]);\n\n\tuseEffect(() => {\n\t\tif (ref.current) ref.current.innerText = running ? \"stop\" : \"start\";\n\t}, [running]);\n\n\tconst handleChange = () => {\n\t\tconsole.log(ref);\n\t\tdispatch({ type: ref.current.innerText });\n\t};\n\n\treturn <HeaderUI {...{ buttonStyle, handleChange, ref }} />;\n}\n\nconst HeaderUI = React.forwardRef(({ buttonStyle, handleChange }, ref) => {\n\treturn (\n\t\t<header className=\"MainHeader\">\n\t\t\t<div className=\"app_name\">\n\t\t\t\t<h1>Sorting Algorithm Visualizer</h1>\n\t\t\t</div>\n\n\t\t\t<div className=\"divider\"></div>\n\n\t\t\t<div className=\"start_container\">\n\t\t\t\t<button\n\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\tclassName=\"start button-style button-action\"\n\t\t\t\t\tonClick={handleChange}\n\t\t\t\t>\n\t\t\t\t\t<p ref={ref}>start</p>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</header>\n\t);\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../utils\";\n\nexport default function BubbleSort(props) {\n\tconst [i, setI] = useState();\n\tconst [j, setJ] = useState();\n\tconst [paused, setPaused] = useState();\n\tconst [cords, setCords] = useState();\n\tconst [, setUpdate] = useState(true);\n\n\tconst { array, running, size, speed, newArray, algoType, dispatch } =\n\t\tuseContext(AppContext);\n\tconst sortingSpeed = (8 * (speed * speed)) / 2;\n\tconsole.log(speed, sortingSpeed);\n\n\tconst length = array.length;\n\n\t/**\n\t * set's default values\n\t */\n\tfunction reset() {\n\t\tsetI(-1);\n\t\tsetJ(-1);\n\t\tsetPaused(false);\n\t\tsetCords({ i: -1, j: -1 });\n\t}\n\n\t/**\n\t * force re-render component using state\n\t */\n\tfunction forceUpdate() {\n\t\tsetUpdate((prev) => !prev);\n\t}\n\n\t/**\n\t *\tdispatches and re-render the component\n\t *\n\t * @param {array} array global state array\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArray(array, update) {\n\t\tdispatch({ type: \"array\", data: array });\n\t\tif (update) forceUpdate();\n\t}\n\n\t/**\n\t *\tset's the array state\n\t *\n\t * @param {number} index index of value to be change\n\t * @param {number} state state value to set on the index\n\t * @param {boolean} both whether to update index and index+1\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArrayState(index, state, both = true, update = true) {\n\t\tlet arr = array;\n\t\tif (both) {\n\t\t\tarr[index][1] = state;\n\t\t\tarr[index + 1][1] = state;\n\t\t} else {\n\t\t\tarr[index][1] = state;\n\t\t}\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t * swap and update array values and\n\t * re-renders the component\n\t *\n\t * @param {number} index index to be swapped\n\t */\n\tfunction swapAndSetArray(index) {\n\t\tlet arr = array;\n\t\tlet temp = arr[index][0];\n\t\tarr[index][0] = arr[index + 1][0];\n\t\tarr[index + 1][0] = temp;\n\t\tsetArray(arr, true);\n\t}\n\n\t/**\n\t * \t\tLogic\n\t */\n\n\t// set values on mount\n\tuseEffect(reset, []);\n\n\t// reset values if size, array or algorithm are changed\n\tuseEffect(() => {\n\t\tif (paused) reset();\n\t}, [size, newArray, algoType]);\n\n\t// Controls running state\n\tuseEffect(() => {\n\t\tif (paused && running) setI(-100);\n\t\telse if (running)\n\t\t\tif (i === -1) setI(0);\n\t\t\telse setI((prev) => prev);\n\t\telse if (i > -1) {\n\t\t\tsetPaused(true);\n\t\t\tsetCords({ i, j });\n\t\t}\n\t}, [running]);\n\n\t// outer for loop\n\tuseEffect(() => {\n\t\tif (i === -100) setI(cords.i);\n\t\telse if (running) {\n\t\t\tif (i >= length - 1) {\n\t\t\t\tdispatch({ type: \"stop\" });\n\t\t\t\tsetI(-1);\n\t\t\t\tsetJ(-1);\n\t\t\t} else if (paused) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetJ(-100);\n\t\t\t\t\tsetPaused(false);\n\t\t\t\t}, sortingSpeed);\n\t\t\t} else {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetJ(0);\n\t\t\t\t}, sortingSpeed);\n\t\t\t}\n\t\t}\n\t}, [i]);\n\n\t// inner for loop\n\tuseEffect(() => {\n\t\tif (j === -100) setJ(cords.j);\n\t\telse if (running && i >= 0)\n\t\t\tif (j >= length - i - 1) {\n\t\t\t\tif (j === 1) setArrayState(j - 1, 2, true, false);\n\t\t\t\telse setArrayState(j, 2, false, false);\n\n\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t} else {\n\t\t\t\tsetArrayState(j, 1);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (array[j][0] > array[j + 1][0]) {\n\t\t\t\t\t\tsetArrayState(j, -1);\n\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tswapAndSetArray(j);\n\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tsetArrayState(j, 1);\n\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\tsetArrayState(j, 0, false, false);\n\t\t\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t\t\t}, sortingSpeed);\n\t\t\t\t\t\t\t}, sortingSpeed);\n\t\t\t\t\t\t}, sortingSpeed);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetArrayState(j, 0, false, false);\n\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t\t}, sortingSpeed);\n\t\t\t\t\t\t}, sortingSpeed);\n\t\t\t\t\t}\n\t\t\t\t}, sortingSpeed);\n\t\t\t}\n\t}, [j]);\n\n\treturn <props.childComponent {...props.childProps} />;\n}\n","import React from \"react\";\n\nexport default function HeapSort() {\n\treturn <div></div>;\n}\n","import React from \"react\";\n\nexport default function MergeSort() {\n\treturn <div></div>;\n}\n","import React from \"react\";\n\nexport default function QuickSort() {\n\treturn <div></div>;\n}\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport BubbleSort from \"../components/BubbleSort\";\nimport HeapSort from \"../components/HeapSort\";\nimport MergeSort from \"../components/MergeSort\";\nimport QuickSort from \"../components/QuickSort\";\n\nimport { AppContext } from \"../utils\";\n\nexport default function Sort(props) {\n\tconst { algoType } = useContext(AppContext);\n\tconst [sorterType, setSorterType] = useState();\n\n\tuseEffect(() => {\n\t\tif (sorterType !== algoType) {\n\t\t\tsetSorterType(algoType);\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [algoType]);\n\n\tswitch (sorterType) {\n\t\tcase \"Merge Sort\":\n\t\t\treturn <MergeSort {...props} />;\n\t\tcase \"Heap Sort\":\n\t\t\treturn <HeapSort {...props} />;\n\t\tcase \"Quick Sort\":\n\t\t\treturn <QuickSort {...props} />;\n\t\tcase \"Bubble Sort\":\n\t\t\treturn <BubbleSort {...props} />;\n\t\tdefault:\n\t\t\treturn <props.childComponent {...props.childProps} />;\n\t}\n}\n","import React, { useContext } from \"react\";\nimport {\n\tAppContext,\n\tgetBackgroundColor,\n\tgetBarHeight,\n\tgetBarMargin,\n\tgetBarWidth,\n\tsetHeightValue,\n} from \"../utils\";\nimport Sort from \"./Sort\";\n\n// FIXME - passing ArrayBarUI as children doesn't updates the UI\nexport default function ArrayBars({ gridSize }) {\n\tconst { array, size } = useContext(AppContext);\n\n\tconst props = {\n\t\tchildProps: { array, gridSize, size },\n\t\tchildComponent: ArrayBarsUI,\n\t};\n\n\treturn <Sort {...props} />;\n}\n\nfunction ArrayBarsUI({ array, gridSize, size }) {\n\treturn (\n\t\t<>\n\t\t\t{array.map((bar, i, bars) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"bar\"\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tid={`${bar[0]} ${gridSize.clientHeight} ${size}`}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: `${getBarHeight(bar[0], size, gridSize.clientHeight)}px`,\n\t\t\t\t\t\t\twidth: `${getBarWidth(bars.length, gridSize.clientWidth)}px`,\n\t\t\t\t\t\t\tbackgroundColor: `${getBackgroundColor(bar[1])}`,\n\t\t\t\t\t\t\tmargin: `${getBarMargin(bars.length, gridSize.clientWidth)}px`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{setHeightValue(bar[0], bars.length, gridSize.clientWidth)}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport ArrayBars from \"../containers/ArrayBars\";\n\nimport \"../styles/Grid.scss\";\nimport { AppContext, arrayGen } from \"../utils\";\n\nexport default function Grid() {\n\tconst [gridSize, setGridSize] = useState();\n\tconst { newArray, size, dispatch } = useContext(AppContext);\n\tconst gridRef = useRef();\n\n\tuseEffect(() => {\n\t\tif (newArray) {\n\t\t\tdispatch({ type: \"array\", data: arrayGen(size) });\n\t\t\tdispatch({ type: \"reset\" });\n\t\t}\n\t}, [newArray, size, dispatch]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", setWidthHeight);\n\t\tsetWidthHeight();\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", setWidthHeight);\n\t\t};\n\t}, []);\n\n\tconst setWidthHeight = () => {\n\t\tconst { clientWidth, clientHeight } = gridRef.current;\n\t\tsetGridSize({ clientWidth, clientHeight });\n\t};\n\n\treturn <GridUI {...{ gridSize, ref: gridRef }} />;\n}\n\nconst GridUI = React.forwardRef(({ gridSize }, gridRef) => {\n\treturn (\n\t\t<div className=\"Grid\">\n\t\t\t<div ref={gridRef} className=\"grid_container\">\n\t\t\t\t<div className=\"ruler\"></div>\n\t\t\t\t<div className=\"arrayBars\">\n\t\t\t\t\t<ArrayBars {...{ gridSize }} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n","import React, { useState } from \"react\";\n\nimport SideBar from \"./SideBar\";\nimport Header from \"../components/Header\";\nimport Grid from \"../containers/Grid\";\n\nimport { AppContext } from \"../utils\";\nimport \"../styles/App.scss\";\n\nexport default function App() {\n\t// states\n\tconst [newArray, setNewArray] = useState(true);\n\tconst [algoType, setAlgoType] = useState(\"\");\n\tconst [size, setSize] = useState(2); // 1-10\n\tconst [speed, setSpeed] = useState(8); // 10 - 1\n\tconst [running, setRunning] = useState(false);\n\tconst [array, setArray] = useState([]);\n\n\tconst dispatch = ({ type, data }) => {\n\t\tswitch (type) {\n\t\t\tcase \"reset\":\n\t\t\t\tif (!running) setNewArray((prev) => !prev);\n\t\t\t\tbreak;\n\t\t\tcase \"algoType\":\n\t\t\t\tif (!running) setAlgoType(data);\n\t\t\t\tbreak;\n\t\t\tcase \"size\":\n\t\t\t\tif (!running) {\n\t\t\t\t\tsetNewArray(true);\n\t\t\t\t\tsetSize(data);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"speed\":\n\t\t\t\tif (!running) setSpeed(data);\n\t\t\t\tbreak;\n\t\t\tcase \"start\":\n\t\t\t\tif (algoType !== \"\") setRunning(true);\n\t\t\t\tbreak;\n\t\t\tcase \"stop\":\n\t\t\t\tif (algoType !== \"\") setRunning(false);\n\t\t\t\tbreak;\n\t\t\tcase \"array\":\n\t\t\t\tif (!running) setArray(data);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"What are you doing?\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AppContext.Provider\n\t\t\t\tvalue={{ newArray, size, speed, running, algoType, dispatch, array }}\n\t\t\t>\n\t\t\t\t<Header />\n\t\t\t\t<main className=\"Main\">\n\t\t\t\t\t<Grid />\n\t\t\t\t\t<SideBar />\n\t\t\t\t</main>\n\t\t\t</AppContext.Provider>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}