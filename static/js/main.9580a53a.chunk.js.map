{"version":3,"sources":["utils.js","components/Slider.js","containers/Sliders.js","assets/downArrow.svg","components/AlgoDropDown.js","assets/menuOpen.svg","assets/menuClose.svg","containers/SideBar.js","components/Header.js","components/BubbleSort.js","components/InsertionSort.js","components/MergeSort.js","components/QuickSort.js","components/SelectionSort.js","containers/Sort.js","containers/ArrayBars.js","containers/Grid.js","containers/App.js","index.js"],"names":["AppContext","React","createContext","inActiveButtonStyle","boxShadow","filter","Algorithm","Bubble","pause","Selection","Insertion","Merge","Quick","arrayGen","size","array","range","i","push","Math","floor","random","ceil","getBarHeight","bar","height","getBarWidth","length","width","setHeightValue","barWidth","style","fontSize","getBackgroundColor","state","Slider","memo","name","value","min","max","dispatch","useContext","className","type","onInput","e","target","data","abs","Number","Sliders","types","title","speed","SlidersUI","map","rest","AlgoDropDown","deadState","algoType","running","containerRef","useRef","optionRef","current","AlgoDropDownUI","ref","handleClick","setTimeout","classList","toggle","handleChange","id","forwardRef","props","options","Object","keys","algo","onClick","src","DownArrow","alt","SideBar","useState","setDeadState","MenuOpen","buttonImg","setButtonImg","useEffect","SideBarUI","event","handleVisibility","MenuClose","Header","wait","setWait","buttonStyle","setStyle","innerText","HeaderUI","alert","href","BubbleSort","I","setI","J","setJ","paused","setPaused","cords","setCords","setUpdate","setArray","update","prev","setArrayState","index","both","arr","timeOut","func","time","temp","swapAndSetArray","childComponent","childProps","InsertionSort","key","setKey","started","setStarted","reset","indexes","start","end","setArrayStateRange","j","pushBackAndSet","MergeSort","setIndex","maxIndex","setMaxIndex","sortIndexes","setSortIndexes","merge","setMerge","continueMerge","setContinueMerge","startIndex","setStartIndex","Array","fill","shifter","a","from","to","splice","slicer","QuickSort","quickSort","setQuickSort","pLength","setPLength","sort","setSort","partitionIndex","setPartitionIndex","minMax","setMinMax","swap","index1","index2","partition","pop","high","SelectionSort","Sort","sorterType","setSorterType","resetArrayState","ArrayBars","gridSize","ArrayBarsUI","bars","clientHeight","clientWidth","backgroundColor","margin","Grid","setGridSize","newArray","gridRef","window","addEventListener","setWidthHeight","removeEventListener","GridUI","App","setNewArray","setAlgoType","setSize","setSpeed","setRunning","Provider","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9580a53a.chunk.js","sourcesContent":["import React from \"react\";\n\n// App Context\nexport const AppContext = React.createContext();\nexport const inActiveButtonStyle = {\n\tboxShadow: \"0 0 4px 0px #565656\",\n\tfilter: \"none\",\n};\n\n// Algorithms\nexport const Algorithm = {\n\tBubble: {\n\t\tpause: true,\n\t},\n\tSelection: {\n\t\tpause: true,\n\t},\n\tInsertion: {\n\t\tpause: true,\n\t},\n\tMerge: {\n\t\tpause: true,\n\t},\n\tQuick: {\n\t\tpause: false,\n\t},\n};\n\n// Array Bar functions\nexport const arrayGen = (size) => {\n\tlet array = [];\n\tlet range = (size > 5 ? size + 2 : size + 3) * size;\n\n\tfor (let i = 1; i <= range; i++) {\n\t\tarray.push([\n\t\t\tMath.floor(10 + Math.random() * (Math.ceil(size / 3) * 100 - 10)),\n\t\t\t0,\n\t\t]);\n\t}\n\treturn array;\n};\n\nexport const getBarHeight = (bar, size, height) =>\n\t(bar / (Math.ceil(size / 3) * 100)) * (height * 0.7);\n\nexport const getBarWidth = (length, width) => (width * 0.5) / length;\n\nexport const getBarMargin = (length, width) =>\n\tMath.min((width * 0.24) / length, 20);\n\nexport const setHeightValue = (bar, length, width) => {\n\tconst barWidth = getBarWidth(length, width);\n\tlet size = 20;\n\tif (barWidth > 25) {\n\t\tif (barWidth < 40) size = 12;\n\t\telse if (barWidth < 80) size = 16;\n\t\treturn <p style={{ fontSize: `${size}px` }}>{bar}</p>;\n\t}\n\treturn null;\n};\n\nexport const getBackgroundColor = (state) => {\n\tswitch (state) {\n\t\tcase -1:\n\t\t\treturn \"#A11E1B\"; // red\n\t\tcase 1:\n\t\t\treturn \"#1BA134\"; // green\n\t\tcase 2:\n\t\t\treturn \"#1B22A1\"; // dark-blue\n\t\tdefault:\n\t\t\treturn \"#1B71A1\"; // light-blue\n\t}\n};\n\n/*\n\tArray size\n\t4*1 5*2 6*3 7*4 7*5\t\n\t8*6 9*7 10*8 11*9 12*10\n\t\n\tarray range\n\t(1,2,3) : 10 - 100\n\t(3,4,5) : 10 - 200\n\t(6,7,8) : 10 - 300\n\t(9,10)  : 10 - 400\n\n\tarray state\n\t-1 - wrong\n\t0 - unsorted or untracked\n\t1 - selected \n\t2 - sorted\n\n\n\tresulted array\n\t[[value,0],[value,0],[value,0],[value,0],[value,0]]\n*/\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../utils\";\n\nconst Slider = React.memo(({ name, value, min = 1, max = 10 }) => {\n\tconst { dispatch } = useContext(AppContext);\n\n\tconst onInput = (e) => {\n\t\tconst { className, value } = e.target;\n\t\tconst data = Math.abs(Number(value));\n\t\tdispatch({ type: className, data });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\tclassName={name}\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin={min}\n\t\t\t\tmax={max}\n\t\t\t\tvalue={value}\n\t\t\t\tonInput={onInput}\n\t\t\t/>\n\t\t</>\n\t);\n});\n\nexport default Slider;\n","import React, { useContext } from \"react\";\n\nimport Slider from \"../components/Slider\";\n\nimport { AppContext } from \"../utils\";\n\nexport default function Sliders() {\n\tconst { size, speed } = useContext(AppContext);\n\tconst types = [\n\t\t{ name: \"size\", title: \"Array size\", value: size },\n\t\t{\n\t\t\tname: \"speed\",\n\t\t\ttitle: \"Sorting speed\",\n\t\t\tvalue: -1 * speed,\n\t\t\tmin: -10,\n\t\t\tmax: -1,\n\t\t},\n\t];\n\treturn <SlidersUI {...{ types }} />;\n}\n\nconst SlidersUI = React.memo(({ types }) => {\n\treturn (\n\t\t<>\n\t\t\t{types.map((type) => {\n\t\t\t\tconst { title, ...rest } = type;\n\t\t\t\treturn (\n\t\t\t\t\t<section key={rest.name} className={`slider_${rest.name}`}>\n\t\t\t\t\t\t<p>{title}</p>\n\t\t\t\t\t\t<Slider {...rest} />\n\t\t\t\t\t</section>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n});\n","export default __webpack_public_path__ + \"static/media/downArrow.cf7bd89e.svg\";","import React, { useContext, useRef } from \"react\";\n\nimport { AppContext, Algorithm } from \"../utils\";\nimport \"../styles/AlgoDropDown.scss\";\nimport DownArrow from \"../assets/downArrow.svg\";\n\nexport default function AlgoDropDown({ deadState }) {\n\tconst { algoType, running, dispatch } = useContext(AppContext);\n\tconst containerRef = useRef();\n\tconst optionRef = useRef();\n\n\tlet current = algoType ? `${algoType} Sort` : \"Type of algorithm\";\n\n\tconst handleChange = (e) => {\n\t\toptionRef.current.className = \"algoDropDown_options\";\n\t\tcontainerRef.current.classList.toggle(\"algoDropDown_interaction\");\n\n\t\tsetTimeout(() => {\n\t\t\tcontainerRef.current.classList.toggle(\"algoDropDown_interaction\");\n\t\t}, 100);\n\n\t\tdispatch({ type: \"algoType\", data: e.target.id });\n\t};\n\n\tconst handleClick = () => {\n\t\tif (!running)\n\t\t\tsetTimeout(() => {\n\t\t\t\toptionRef.current.classList.toggle(\n\t\t\t\t\t\"algoDropDown_container_interaction\"\n\t\t\t\t);\n\t\t\t}, 100);\n\t};\n\n\treturn (\n\t\t<AlgoDropDownUI\n\t\t\t{...{\n\t\t\t\tref: { containerRef, optionRef },\n\t\t\t\tdeadState,\n\t\t\t\thandleClick,\n\t\t\t\tcurrent,\n\t\t\t\trunning,\n\t\t\t\thandleChange,\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nconst AlgoDropDownUI = React.forwardRef(\n\t(props, { containerRef, optionRef }) => {\n\t\tconst options = Object.keys(Algorithm).map((algo, i) => (\n\t\t\t<li key={i}>\n\t\t\t\t<button id={algo} onClick={props.handleChange}>\n\t\t\t\t\t{`${algo} Sort`}\n\t\t\t\t</button>\n\t\t\t\t{i < Object.keys(Algorithm).length - 1 && <hr />}\n\t\t\t</li>\n\t\t));\n\n\t\treturn (\n\t\t\t<section\n\t\t\t\tref={containerRef}\n\t\t\t\tclassName=\"algoDropDown_container algoDropDown_interaction\"\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tstyle={props.deadState}\n\t\t\t\t\tclassName=\"algoDropDown_button button-style button-action\"\n\t\t\t\t\tonClick={props.handleClick}\n\t\t\t\t>\n\t\t\t\t\t<p>{props.current}</p>\n\t\t\t\t\t<img src={DownArrow} alt=\"Down Arrow\" />\n\t\t\t\t</button>\n\n\t\t\t\t{!props.running && (\n\t\t\t\t\t<div className=\"algoDropDown_options\" id=\"options\" ref={optionRef}>\n\t\t\t\t\t\t<ul className=\"options\">{options}</ul>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t);\n\t}\n);\n","export default __webpack_public_path__ + \"static/media/menuOpen.db3319ac.svg\";","export default __webpack_public_path__ + \"static/media/menuClose.cba5efdd.svg\";","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport Sliders from \"./Sliders\";\nimport AlgoDropDown from \"../components/AlgoDropDown\";\n\nimport { AppContext, inActiveButtonStyle } from \"../utils\";\nimport \"../styles/SideBar.scss\";\nimport MenuOpen from \"../assets/menuOpen.svg\";\nimport MenuClose from \"../assets/menuClose.svg\";\n\nexport default function SideBar() {\n\tconst [deadState, setDeadState] = useState({});\n\tconst [buttonImg, setButtonImg] = useState(MenuOpen);\n\tconst { running, dispatch } = useContext(AppContext);\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tconst length = Object.keys(deadState).length;\n\n\t\tif (running && !length) setDeadState(inActiveButtonStyle);\n\t\telse if (!running && length) setDeadState({});\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [running]);\n\n\tconst handleClick = (event) => {\n\t\tdispatch({ type: \"reset\" });\n\t};\n\n\tconst handleVisibility = () => {\n\t\tref.current.classList.toggle(\"sidebar_container_action\");\n\t\tif (ref.current.classList.length === 2) setButtonImg(MenuClose);\n\t\telse setButtonImg(MenuOpen);\n\t};\n\n\treturn (\n\t\t<SideBarUI\n\t\t\t{...{ handleClick, handleVisibility, ref, deadState, buttonImg }}\n\t\t/>\n\t);\n}\n\nconst SideBarUI = React.forwardRef(\n\t({ handleClick, handleVisibility, deadState, buttonImg }, ref) => {\n\t\treturn (\n\t\t\t<section className=\"Sidebar\">\n\t\t\t\t<button className=\"visibility_button\" onClick={handleVisibility}>\n\t\t\t\t\t<img src={buttonImg} alt=\"open\" />\n\t\t\t\t</button>\n\n\t\t\t\t<div ref={ref} className=\"sidebar_container\">\n\t\t\t\t\t<section className=\"sidebar_main\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={deadState}\n\t\t\t\t\t\t\tclassName=\"newArray button-style button-action\"\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p>New Array</p>\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<AlgoDropDown deadState={deadState} />\n\t\t\t\t\t\t<Sliders />\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n);\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport { AppContext, inActiveButtonStyle, Algorithm } from \"../utils\";\nimport \"../styles/Header.scss\";\n\nexport default function Header() {\n\tconst [wait, setWait] = useState(false);\n\tconst [buttonStyle, setStyle] = useState(inActiveButtonStyle);\n\n\tconst { algoType, running, dispatch } = useContext(AppContext);\n\tconst ref = useRef();\n\n\tconst length = Object.keys(buttonStyle).length;\n\n\tuseEffect(() => {\n\t\tif (!algoType && !length) setStyle(inActiveButtonStyle);\n\t\telse if (algoType && length) setStyle({});\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [algoType]);\n\n\tuseEffect(() => {\n\t\tif (wait && !length) {\n\t\t\tsetStyle(inActiveButtonStyle);\n\t\t} else if (!wait && length && algoType) {\n\t\t\tsetStyle({});\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [wait]);\n\n\tuseEffect(() => {\n\t\tif (ref.current) ref.current.innerText = running ? \"stop\" : \"start\";\n\t}, [running]);\n\n\tconst handleChange = () => {\n\t\tif (!wait) {\n\t\t\tif (ref.current.innerText === \"stop\") {\n\t\t\t\tsetWait(true);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetWait(false);\n\t\t\t\t}, [500]);\n\t\t\t}\n\n\t\t\tif (ref.current.innerText === \"stop\") {\n\t\t\t\tif (Algorithm[algoType].pause)\n\t\t\t\t\tdispatch({ type: ref.current.innerText });\n\t\t\t\telse\n\t\t\t\t\talert(\n\t\t\t\t\t\t`Stopping functionality for ${algoType} Sort is under construction.\\nAlthough the sorting is paused right now 😋.`\n\t\t\t\t\t);\n\t\t\t} else if (ref.current.innerText === \"start\")\n\t\t\t\tdispatch({ type: ref.current.innerText });\n\t\t}\n\t};\n\n\treturn <HeaderUI {...{ buttonStyle, handleChange, ref }} />;\n}\n\nconst HeaderUI = React.forwardRef(({ buttonStyle, handleChange }, ref) => {\n\treturn (\n\t\t<header className=\"MainHeader\">\n\t\t\t<div className=\"app_name\">\n\t\t\t\t<a href=\"https://github.com/preidiot/sorting-algo-visualizer\">\n\t\t\t\t\t<h1>Sorting Algorithm Visualizer</h1>\n\t\t\t\t</a>\n\t\t\t</div>\n\n\t\t\t<div className=\"divider\"></div>\n\n\t\t\t<div className=\"start_container\">\n\t\t\t\t<button\n\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\tclassName=\"start button-style button-action\"\n\t\t\t\t\tonClick={handleChange}\n\t\t\t\t>\n\t\t\t\t\t<p ref={ref}>start</p>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</header>\n\t);\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../utils\";\n\nexport default function BubbleSort(props) {\n\tconst [I, setI] = useState(-1);\n\tconst [J, setJ] = useState(-1);\n\tconst [paused, setPaused] = useState(false);\n\tconst [cords, setCords] = useState({ I: -1, J: -1 });\n\tconst [, setUpdate] = useState(true);\n\n\tconst { array, running, speed, dispatch } = useContext(AppContext);\n\tconst length = array.length;\n\n\t/**\n\t * \t\tLogic\n\t */\n\n\t// reset values if size, array or algorithm are changed\n\tuseEffect(() => {\n\t\tif (paused) reset();\n\t}, [array]);\n\n\t// Controls running state\n\tuseEffect(() => {\n\t\tif (paused && running) setI(-100);\n\t\telse if (running)\n\t\t\tif (I === -1) setI(0);\n\t\t\telse setI((prev) => prev);\n\t\telse if (I > -1) {\n\t\t\tsetPaused(true);\n\t\t\tconst j = J > -1 ? J : 0;\n\t\t\tsetCords({ I, J: j });\n\t\t}\n\t}, [running]);\n\n\t// outer for loop\n\tuseEffect(() => {\n\t\tif (I === -100) setI(cords.I);\n\t\telse if (running) {\n\t\t\tif (I >= length - 1) {\n\t\t\t\tdispatch({ type: \"stop\" });\n\t\t\t\tsetI(-1);\n\t\t\t\tsetJ(-1);\n\t\t\t} else if (paused) {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tsetJ(-100);\n\t\t\t\t\tsetPaused(false);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tsetJ(0);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [I]);\n\n\t// inner for loop\n\tuseEffect(() => {\n\t\tif (J === -100) setJ(cords.J);\n\t\telse if (running && I >= 0)\n\t\t\tif (J >= length - I - 1) {\n\t\t\t\tif (J === 1) setArrayState(J - 1, 2, true, false);\n\t\t\t\telse setArrayState(J, 2, false, false);\n\n\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t} else {\n\t\t\t\tsetArrayState(J, 1);\n\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tif (array[J][0] > array[J + 1][0]) {\n\t\t\t\t\t\tsetArrayState(J, -1);\n\n\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\tswapAndSetArray(J);\n\n\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\tsetArrayState(J, 1);\n\n\t\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\t\tsetArrayState(J, 0, false, false);\n\t\t\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetArrayState(J, 0, false, false);\n\n\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t}, [J]);\n\n\t/**\n\t * \t\tHelper functions\n\t */\n\n\t/**\n\t * set's default values\n\t */\n\tfunction reset() {\n\t\tsetI(-1);\n\t\tsetJ(-1);\n\t\tsetPaused(false);\n\t\tsetCords({ I: -1, J: -1 });\n\t}\n\n\t/**\n\t * force re-render component using state\n\t */\n\tfunction forceUpdate() {\n\t\tsetUpdate((prev) => !prev);\n\t}\n\n\t/**\n\t *\tdispatches and re-render the component\n\t *\n\t * @param {array} array global state array\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArray(array, update) {\n\t\tdispatch({ type: \"array\", data: array });\n\t\tif (update) forceUpdate();\n\t}\n\n\t/**\n\t *\tset's the array state\n\t *\n\t * @param {number} index index of value to be change\n\t * @param {number} state state value to set on the index\n\t * @param {boolean} both whether to update index and index+1\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArrayState(index, state, both = true, update = true) {\n\t\tlet arr = array;\n\t\tif (both) {\n\t\t\tarr[index][1] = state;\n\t\t\tarr[index + 1][1] = state;\n\t\t} else {\n\t\t\tarr[index][1] = state;\n\t\t}\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t * swap and update array values and\n\t * re-renders the component\n\t *\n\t * @param {number} index index to be swapped\n\t */\n\tfunction swapAndSetArray(index) {\n\t\tlet arr = array;\n\t\tlet temp = arr[index][0];\n\t\tarr[index][0] = arr[index + 1][0];\n\t\tarr[index + 1][0] = temp;\n\t\tsetArray(arr, true);\n\t}\n\n\t/**\n\t * run a function after specific time interval\n\t * @param {function} func function to run\n\t * @param {number} time timeInterval\n\t */\n\tfunction timeOut(func, time = 4 * speed ** 2) {\n\t\tsetTimeout(() => {\n\t\t\tif (running) {\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}, time);\n\t}\n\n\treturn <props.childComponent {...props.childProps} />;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../utils\";\n\nexport default function InsertionSort(props) {\n\tconst [I, setI] = useState(-2);\n\tconst [J, setJ] = useState(-2);\n\n\tconst [key, setKey] = useState(null);\n\tconst [paused, setPaused] = useState(false);\n\tconst [cords, setCords] = useState({ I: -2, J: -2 });\n\tconst [started, setStarted] = useState(false);\n\tconst [, setUpdate] = useState(true);\n\n\tconst { array, running, speed, dispatch } = useContext(AppContext);\n\tconst length = array.length;\n\n\tuseEffect(() => {\n\t\tif (!running) {\n\t\t\treset();\n\t\t}\n\t}, [array]);\n\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tsetStarted(true);\n\t\t\tsetI(1);\n\t\t} else if (!running && started) {\n\t\t\tsetCords({ I, J });\n\t\t\tsetPaused(true);\n\t\t} else if (running && paused) {\n\t\t\tsetI(-10);\n\t\t}\n\t}, [running]);\n\n\tuseEffect(() => {\n\t\tif (running && I !== -2) {\n\t\t\tif (I === -10) {\n\t\t\t\tsetI(cords.I);\n\t\t\t} else if (I < length) {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tif (!paused) {\n\t\t\t\t\t\tsetKey(array[I]);\n\t\t\t\t\t\tsetArrayState([I], 1);\n\t\t\t\t\t\tsetJ(I - 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcords.J !== J && setCords({ I, J });\n\t\t\t\t\t\tsetJ(-10);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetArrayStateRange(0, length);\n\t\t\t\tdispatch({ type: \"stop\" });\n\t\t\t\treset();\n\t\t\t}\n\t\t}\n\t}, [I]);\n\n\tuseEffect(() => {\n\t\tif (running && J !== -2) {\n\t\t\ttimeOut(() => {\n\t\t\t\tif (J === -10) {\n\t\t\t\t\tsetPaused(false);\n\t\t\t\t\tsetJ(cords.J);\n\t\t\t\t} else if (J >= 0 && array[J][0] > key[0]) {\n\t\t\t\t\tsetArrayState([J + 1], -1);\n\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\tpushBackAndSet(J);\n\t\t\t\t\t\tsetJ((prev) => prev - 1);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t\t\tsetArrayState([J + 1], 0);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [J]);\n\n\t/**\n\t * Helper functions\n\t */\n\n\t/**\n\t * set's default values\n\t */\n\tfunction reset() {\n\t\tsetI(-2);\n\t\tsetJ(-2);\n\t\tsetKey(null);\n\t\tsetCords({ I: -2, J: -2 });\n\t\tsetPaused(false);\n\t\tsetStarted(false);\n\t}\n\n\t/**\n\t * run a function after specific time interval\n\t * @param {function} func function to run\n\t * @param {number} time timeInterval\n\t */\n\tfunction timeOut(func, time = 4 * speed ** 2) {\n\t\tsetTimeout(() => {\n\t\t\tif (running) {\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}, time);\n\t}\n\n\t/**\n\t * switches element with key\n\t * @param {number} j index of higher element\n\t * @param {boolean} update re-render\n\t */\n\tfunction pushBackAndSet(j, update = true) {\n\t\tlet arr = array;\n\t\tarr[j + 1] = arr[j];\n\t\tarr[j] = key;\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t *\tset's the array state\n\t * @param {number} from starting Index\n\t * @param {boolean} to ending Index\n\t * @param {number} state state value to set on the index\n\t * @param {boolean} update should component re-render\n\t */\n\n\tfunction setArrayState(indexes, state, update = true) {\n\t\tlet arr = array;\n\t\tfor (const index of indexes) {\n\t\t\tarr[index][1] = state;\n\t\t}\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t * set's the array state within range\n\t * @param {number} start start index\n\t * @param {number} end end index\n\t */\n\tfunction setArrayStateRange(start, end) {\n\t\tlet arr = array;\n\t\tfor (let i = start; i < end; i++) {\n\t\t\tarr[i][1] = 2;\n\t\t}\n\t\tsetArray(arr, false);\n\t}\n\n\t/**\n\t *\tdispatches and re-render the component\n\t * @param {array} array global state array\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArray(array, update) {\n\t\tdispatch({ type: \"array\", data: array });\n\t\tif (update) setUpdate((prev) => !prev);\n\t}\n\n\treturn <props.childComponent {...props.childProps} />;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../utils\";\n\nexport default function MergeSort(props) {\n\tconst { array, running, speed, dispatch } = useContext(AppContext);\n\tconst length = array.length;\n\n\tconst [, setUpdate] = useState(true);\n\tconst [paused, setPaused] = useState(false);\n\tconst [started, setStarted] = useState(false);\n\tconst [cords, setCords] = useState(false);\n\n\t// Sort\n\tconst [index, setIndex] = useState();\n\tconst [maxIndex, setMaxIndex] = useState();\n\tconst [sortIndexes, setSortIndexes] = useState();\n\n\t//merge\n\tconst [merge, setMerge] = useState(false);\n\tconst [continueMerge, setContinueMerge] = useState(false);\n\tconst [startIndex, setStartIndex] = useState();\n\tconst [I, setI] = useState(-1);\n\tconst [J, setJ] = useState(-1);\n\n\tuseEffect(() => {\n\t\tif (!running) reset();\n\t}, [array]);\n\n\t// controller\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tsetStarted(true);\n\t\t\tsetIndex(1);\n\t\t\tsetMaxIndex(2);\n\t\t} else if (!running && started) {\n\t\t\tsetMerge(false);\n\t\t\tsetPaused(true);\n\t\t} else if (running && paused) {\n\t\t\tsetMerge(false);\n\t\t\tsetPaused(false);\n\t\t}\n\t}, [running]);\n\n\t// merge Sort\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tif (index === 0) {\n\t\t\t\tif (maxIndex === length) {\n\t\t\t\t\treset();\n\t\t\t\t\tdispatch({ type: \"stop\" });\n\t\t\t\t} else {\n\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\tsetMaxIndex((prev) => prev + 2);\n\t\t\t\t\t\tsetIndex(2);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tsortIndexes[index - 1] === sortIndexes[index] ||\n\t\t\t\t\t\tmaxIndex === length\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetI(maxIndex - (sortIndexes[index] + sortIndexes[index - 1]));\n\t\t\t\t\t\tsetJ(maxIndex - sortIndexes[index]);\n\t\t\t\t\t\tsetMerge(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetMaxIndex((prev) => prev + 1);\n\t\t\t\t\t\tsetIndex((prev) => prev + 1);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [index, paused]);\n\n\t// merge\n\tuseEffect(() => {\n\t\tif (merge) {\n\t\t\tif (cords) {\n\t\t\t\tsetI(cords.I);\n\t\t\t\tsetJ(cords.J);\n\t\t\t\tsetCords(false);\n\t\t\t} else {\n\t\t\t\tsetStartIndex(I);\n\t\t\t\tsetArrayState(I, maxIndex, 1);\n\t\t\t}\n\t\t\ttimeOut(() => {\n\t\t\t\tsetContinueMerge((prev) => !prev);\n\t\t\t});\n\t\t}\n\t}, [merge]);\n\n\t// sort\n\tuseEffect(() => {\n\t\tif (merge && running) {\n\t\t\ttimeOut(() => {\n\t\t\t\tif (I < J && J < maxIndex) {\n\t\t\t\t\tif (array[I][0] <= array[J][0]) {\n\t\t\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t\t\t\tsetContinueMerge((prev) => !prev);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (array[I][1] !== -1) setArrayState(startIndex, maxIndex, -1);\n\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\tdispatch({ type: \"array\", data: shifter(I, J) });\n\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t\t\t\t\tsetContinueMerge((prev) => !prev);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (I === J || J === maxIndex) {\n\t\t\t\t\tif (index === 1 && maxIndex === length) {\n\t\t\t\t\t\tsetArrayState(0, maxIndex, 2);\n\t\t\t\t\t\treturn setIndex((prev) => prev - 1);\n\t\t\t\t\t} else setArrayState(startIndex, maxIndex, 0);\n\n\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\tsetSortIndexes(slicer());\n\t\t\t\t\t\tsetMerge(false);\n\t\t\t\t\t\tsetIndex((prev) => prev - 1);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (I !== -1 && J !== -1 && paused) {\n\t\t\tsetCords({ I, J });\n\t\t}\n\t}, [continueMerge]);\n\n\t/**\n\t * Helper functions\n\t */\n\n\t/**\n\t * set's default values\n\t */\n\tfunction reset() {\n\t\tsetSortIndexes(new Array(array.length).fill(1));\n\t\tsetI(-1);\n\t\tsetJ(-1);\n\t\tsetCords(false);\n\t\tsetMerge(false);\n\t\tsetStarted(false);\n\t\tsetPaused(false);\n\t}\n\n\t/**\n\t * run a function after specific time interval\n\t * @param {function} func function to run\n\t * @param {number} time timeInterval\n\t */\n\tfunction timeOut(func, time = 4 * speed ** 2) {\n\t\tsetTimeout(() => {\n\t\t\tif (running) {\n\t\t\t\tfunc();\n\t\t\t} else {\n\t\t\t\tsetCords({ I, J });\n\t\t\t}\n\t\t}, time);\n\t}\n\n\t/**\n\t * slice and increment array element\n\t *\n\t * @returns {array} array with sliced index\n\t */\n\tfunction slicer() {\n\t\tlet arr = sortIndexes;\n\t\tarr[index - 1] += arr[index];\n\t\tarr.splice(index, 1);\n\t\treturn arr;\n\t}\n\n\t/**\n\t *\n\t * @param {number} I index of first element\n\t * @param {number} J index of last element\n\t * @returns {array} array with shifted element\n\t */\n\tfunction shifter(I, J) {\n\t\tlet arr = array;\n\t\tlet temp = arr[J];\n\t\tfor (let a = J; a > I; a--) {\n\t\t\tarr[a] = arr[a - 1];\n\t\t}\n\t\tarr[I] = temp;\n\t\treturn arr;\n\t}\n\n\t/**\n\t *\tset's the array state\n\t *\n\t * @param {number} from starting Index\n\t * @param {boolean} to ending Index\n\t * @param {number} state state value to set on the index\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArrayState(from, to, state, update = true) {\n\t\tlet arr = array;\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tarr[i][1] = state;\n\t\t}\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t *\tdispatches and re-render the component\n\t *\n\t * @param {array} array global state array\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArray(array, update) {\n\t\tdispatch({ type: \"array\", data: array });\n\t\tif (update) setUpdate((prev) => !prev);\n\t}\n\n\treturn <props.childComponent {...props.childProps} />;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../utils\";\n\nexport default function QuickSort(props) {\n\tconst { array, running, speed, dispatch } = useContext(AppContext);\n\tconst length = array.length;\n\n\tconst [, setUpdate] = useState(true);\n\tconst [paused, setPaused] = useState(false);\n\t//quick\n\tconst [quickSort, setQuickSort] = useState(false);\n\tconst [pLength, setPLength] = useState();\n\tconst [sort, setSort] = useState(false);\n\tconst [partitionIndex, setPartitionIndex] = useState();\n\tconst [minMax, setMinMax] = useState();\n\n\tconst [I, setI] = useState(-1);\n\tconst [J, setJ] = useState(-1);\n\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tsetPartitionIndex([[-1, 1]]);\n\t\t\tsetMinMax([[0, length]]);\n\t\t\tsetPLength(1);\n\t\t\tsetSort(true);\n\t\t}\n\t}, [running]);\n\n\tuseEffect(() => {\n\t\tif (running) {\n\t\t\tlet partition = partitionIndex;\n\t\t\tlet range = minMax;\n\t\t\tlet index = I + 1;\n\n\t\t\tif (index === -10) {\n\t\t\t\tif (partition[pLength - 1][1] === 0) {\n\t\t\t\t\tpartition[pLength - 1][1] = 1;\n\n\t\t\t\t\trange.pop();\n\t\t\t\t\trange.push([partition[pLength - 1][0] + 1, range[pLength - 2][1]]);\n\n\t\t\t\t\tsetPartitionIndex(partition);\n\t\t\t\t\tsetMinMax(range);\n\t\t\t\t\tsetSort(true);\n\t\t\t\t} else if (pLength === 1) {\n\t\t\t\t\tdispatch({ type: \"stop\" });\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tpartition.pop();\n\t\t\t\t\trange.pop();\n\n\t\t\t\t\tsetPartitionIndex(partition);\n\t\t\t\t\tsetMinMax(range);\n\t\t\t\t\tsetPLength((prev) => prev - 1);\n\t\t\t\t\tsetQuickSort((prev) => !prev);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (partition[pLength - 1][1] === 0)\n\t\t\t\t\trange.push([range[pLength - 1][0], index]);\n\t\t\t\telse range.push([range[pLength - 1][0], index]);\n\n\t\t\t\tpartition.push([index, 0]);\n\n\t\t\t\tsetPartitionIndex(partition);\n\t\t\t\tsetMinMax(range);\n\t\t\t\tsetPLength((prev) => prev + 1);\n\t\t\t\tsetSort(true);\n\t\t\t}\n\t\t}\n\t}, [quickSort]);\n\n\tuseEffect(() => {\n\t\tif (sort) {\n\t\t\tconst range = minMax[pLength - 1];\n\t\t\tif (range[1] - range[0] < 2) {\n\t\t\t\trange[0] < length && setArrayState([range[0]], 2);\n\t\t\t\tsetI(-11);\n\t\t\t\tsetQuickSort((prev) => !prev);\n\t\t\t\tsetSort(false);\n\t\t\t} else {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tsetArrayState([range[1] - 1], 1, true);\n\n\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\tsetI(range[0] - 1);\n\t\t\t\t\t\tsetJ(range[0]);\n\t\t\t\t\t\tsetSort(false);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [sort]);\n\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tlet high = minMax[pLength - 1][1] - 1;\n\t\t\tif (J < high) {\n\t\t\t\tsetArrayState([I + 1, J], 1, true);\n\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tif (array[J][0] < array[high][0]) {\n\t\t\t\t\t\tif (I + 1 !== J) setArrayState([I + 1, J], -1, true);\n\n\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\tdispatch({ type: \"array\", data: swap(I + 1, J) });\n\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\tsetArrayState([I + 1, J], 1, true);\n\n\t\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\t\tsetArrayState([I + 1, J], 0);\n\t\t\t\t\t\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetArrayState([I + 1, J], 0);\n\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetArrayState([high], 2);\n\t\t\t\tdispatch({ type: \"array\", data: swap(I + 1, high) });\n\t\t\t\tsetQuickSort((prev) => !prev);\n\t\t\t}\n\t\t}\n\t}, [J]);\n\n\t/**\n\t * swap array values\n\t * @param {number} index1 First index\n\t * @param {number} index2 Second index\n\t * @returns {array} updated array\n\t */\n\tfunction swap(index1, index2) {\n\t\tlet arr = array;\n\t\tlet temp = arr[index1];\n\t\tarr[index1] = arr[index2];\n\t\tarr[index2] = temp;\n\t\treturn arr;\n\t}\n\n\t/**\n\t * run a function after specific time interval\n\t * @param {function} func function to run\n\t * @param {number} time timeInterval\n\t */\n\tfunction timeOut(func, time = 4 * speed ** 2) {\n\t\tsetTimeout(() => {\n\t\t\tif (running) {\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}, time);\n\t}\n\n\t/**\n\t *\tset's the array state\n\t *\n\t * @param {number} from starting Index\n\t * @param {boolean} to ending Index\n\t * @param {number} state state value to set on the index\n\t * @param {boolean} update should component re-render\n\t */\n\n\tfunction setArrayState(indexes, state, update = false) {\n\t\tlet arr = array;\n\t\tfor (const index of indexes) {\n\t\t\tarr[index][1] = state;\n\t\t}\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t *\tdispatches and re-render the component\n\t *\n\t * @param {array} array global state array\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArray(array, update) {\n\t\tdispatch({ type: \"array\", data: array });\n\t\tif (update) setUpdate((prev) => !prev);\n\t}\n\n\treturn <props.childComponent {...props.childProps} />;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../utils\";\n\nexport default function SelectionSort(props) {\n\tconst [I, setI] = useState(-1);\n\tconst [J, setJ] = useState(-1);\n\tconst [paused, setPaused] = useState(false);\n\tconst [cords, setCords] = useState({ I: -1, J: -1 });\n\tconst [started, setStarted] = useState(false);\n\tconst [, setUpdate] = useState(true);\n\n\tconst { array, running, speed, dispatch } = useContext(AppContext);\n\tconst length = array.length;\n\n\tuseEffect(() => {\n\t\tif (!running && started) reset();\n\t}, [array]);\n\n\tuseEffect(() => {\n\t\tif (running && !paused) {\n\t\t\tsetStarted(true);\n\t\t\tsetI(0);\n\t\t} else if (!running && started) {\n\t\t\tsetPaused(true);\n\t\t\tsetCords({ I, J });\n\t\t} else if (running && paused) {\n\t\t\tsetI(-10);\n\t\t}\n\t}, [running]);\n\n\t// outer for loop\n\tuseEffect(() => {\n\t\tif (running && I !== -1) {\n\t\t\tif (I === -10) setI(cords.I);\n\t\t\telse if (I < length - 1) {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tif (!paused) {\n\t\t\t\t\t\tsetArrayState([I], 1, false);\n\t\t\t\t\t\tsetJ(I + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcords.J !== J && setCords({ I, J });\n\t\t\t\t\t\tsetJ(-10);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetArrayState([I], 2);\n\t\t\t\tdispatch({ type: \"stop\" });\n\t\t\t\treset();\n\t\t\t}\n\t\t}\n\t}, [I]);\n\n\t// inner for loop\n\tuseEffect(() => {\n\t\tif (running && J !== -1) {\n\t\t\tif (J === -10) {\n\t\t\t\tsetPaused(false);\n\t\t\t\tsetJ(cords.J);\n\t\t\t} else if (J < length) {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tsetArrayState([J], 1);\n\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\tif (array[J][0] < array[I][0]) {\n\t\t\t\t\t\t\tsetArrayState([I, J], -1);\n\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\tdispatch({ type: \"array\", data: swap(I, J) });\n\t\t\t\t\t\t\t\tsetArrayState([I], 1);\n\t\t\t\t\t\t\t\tsetArrayState([J], 0);\n\n\t\t\t\t\t\t\t\ttimeOut(() => {\n\t\t\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetArrayState([J], 0);\n\t\t\t\t\t\t\tsetJ((prev) => prev + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttimeOut(() => {\n\t\t\t\t\tsetArrayState([I], 2);\n\t\t\t\t\tsetI((prev) => prev + 1);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [J]);\n\n\t/**\n\t * Helper functions\n\t */\n\n\t/**\n\t * set's default values\n\t */\n\tfunction reset() {\n\t\tsetI(-1);\n\t\tsetJ(-1);\n\t\tsetCords({ I: -1, J: -1 });\n\t\tsetPaused(false);\n\t\tsetStarted(false);\n\t}\n\n\t/**\n\t * swap array values\n\t * @param {number} index1 First index\n\t * @param {number} index2 Second index\n\t * @returns {array} updated array\n\t */\n\tfunction swap(index1, index2) {\n\t\tlet arr = array;\n\t\tlet temp = arr[index1][0];\n\t\tarr[index1][0] = arr[index2][0];\n\t\tarr[index2][0] = temp;\n\n\t\treturn arr;\n\t}\n\n\t/**\n\t * run a function after specific time interval\n\t * @param {function} func function to run\n\t * @param {number} time timeInterval\n\t */\n\tfunction timeOut(func, time = 4 * speed ** 2) {\n\t\tsetTimeout(() => {\n\t\t\tif (running) {\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}, time);\n\t}\n\n\t/**\n\t *\tset's the array state\n\t *\n\t * @param {number} from starting Index\n\t * @param {boolean} to ending Index\n\t * @param {number} state state value to set on the index\n\t * @param {boolean} update should component re-render\n\t */\n\n\tfunction setArrayState(indexes, state, update = true) {\n\t\tlet arr = array;\n\t\tfor (const index of indexes) {\n\t\t\tarr[index][1] = state;\n\t\t}\n\t\tsetArray(arr, update);\n\t}\n\n\t/**\n\t *\tdispatches and re-render the component\n\t *\n\t * @param {array} array global state array\n\t * @param {boolean} update should component re-render\n\t */\n\tfunction setArray(array, update) {\n\t\tdispatch({ type: \"array\", data: array });\n\t\tif (update) setUpdate((prev) => !prev);\n\t}\n\n\treturn <props.childComponent {...props.childProps} />;\n}\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport BubbleSort from \"../components/BubbleSort\";\nimport InsertionSort from \"../components/InsertionSort\";\nimport MergeSort from \"../components/MergeSort\";\nimport QuickSort from \"../components/QuickSort\";\nimport SelectionSort from \"../components/SelectionSort\";\n\nimport { AppContext } from \"../utils\";\n\nexport default function Sort(props) {\n\tconst { array, algoType, dispatch } = useContext(AppContext);\n\tconst [sorterType, setSorterType] = useState();\n\n\tuseEffect(() => {\n\t\tif (sorterType !== algoType) {\n\t\t\tresetArrayState();\n\t\t\tsetSorterType(algoType);\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [algoType]);\n\n\tswitch (sorterType) {\n\t\tcase \"Merge\":\n\t\t\treturn <MergeSort {...props} />;\n\t\tcase \"Quick\":\n\t\t\treturn <QuickSort {...props} />;\n\t\tcase \"Bubble\":\n\t\t\treturn <BubbleSort {...props} />;\n\t\tcase \"Selection\":\n\t\t\treturn <SelectionSort {...props} />;\n\t\tcase \"Insertion\":\n\t\t\treturn <InsertionSort {...props} />;\n\t\tdefault:\n\t\t\treturn <props.childComponent {...props.childProps} />;\n\t}\n\tfunction resetArrayState() {\n\t\tlet arr = array;\n\t\tfor (let i = 0; i < arr.length; i++) arr[i][1] = 0;\n\t\tdispatch({ type: \"array\", data: arr });\n\t}\n}\n","import React, { useContext } from \"react\";\n\nimport Sort from \"./Sort\";\nimport {\n\tAppContext,\n\tgetBackgroundColor,\n\tgetBarHeight,\n\tgetBarMargin,\n\tgetBarWidth,\n\tsetHeightValue,\n} from \"../utils\";\n\nexport default function ArrayBars({ gridSize }) {\n\tconst { array, size } = useContext(AppContext);\n\n\tconst props = {\n\t\tchildProps: { array, gridSize, size },\n\t\tchildComponent: ArrayBarsUI,\n\t};\n\n\treturn <Sort {...props} />;\n}\n\nfunction ArrayBarsUI({ array, gridSize, size }) {\n\treturn (\n\t\t<>\n\t\t\t{array.map((bar, i, bars) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"bar\"\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tid={`${bar[0]} ${gridSize.clientHeight} ${size}`}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: `${getBarHeight(bar[0], size, gridSize.clientHeight)}px`,\n\t\t\t\t\t\t\twidth: `${getBarWidth(bars.length, gridSize.clientWidth)}px`,\n\t\t\t\t\t\t\tbackgroundColor: `${getBackgroundColor(bar[1])}`,\n\t\t\t\t\t\t\tmargin: `${getBarMargin(bars.length, gridSize.clientWidth)}px`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{setHeightValue(bar[0], bars.length, gridSize.clientWidth)}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport ArrayBars from \"../containers/ArrayBars\";\n\nimport \"../styles/Grid.scss\";\nimport { AppContext, arrayGen } from \"../utils\";\n\nexport default function Grid() {\n\tconst [gridSize, setGridSize] = useState();\n\tconst { newArray, size, dispatch } = useContext(AppContext);\n\tconst gridRef = useRef();\n\n\tuseEffect(() => {\n\t\tif (newArray) {\n\t\t\tdispatch({ type: \"array\", data: arrayGen(size) });\n\t\t\tdispatch({ type: \"reset\" });\n\t\t}\n\t}, [newArray, size, dispatch]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", setWidthHeight);\n\t\tsetWidthHeight();\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", setWidthHeight);\n\t\t};\n\t}, []);\n\n\tconst setWidthHeight = () => {\n\t\tconst { clientWidth, clientHeight } = gridRef.current;\n\t\tsetGridSize({ clientWidth, clientHeight });\n\t};\n\n\treturn <GridUI {...{ gridSize, ref: gridRef }} />;\n}\n\nconst GridUI = React.forwardRef(({ gridSize }, gridRef) => {\n\treturn (\n\t\t<div className=\"Grid\">\n\t\t\t<div ref={gridRef} className=\"grid_container\">\n\t\t\t\t<div className=\"ruler\"></div>\n\t\t\t\t<div className=\"arrayBars\">\n\t\t\t\t\t<ArrayBars {...{ gridSize }} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n","import React, { useState } from \"react\";\n\nimport SideBar from \"./SideBar\";\nimport Header from \"../components/Header\";\nimport Grid from \"../containers/Grid\";\n\nimport { AppContext } from \"../utils\";\nimport \"../styles/App.scss\";\n\nexport default function App() {\n\t// states\n\tconst [newArray, setNewArray] = useState(true);\n\tconst [algoType, setAlgoType] = useState(\"\");\n\tconst [size, setSize] = useState(2); // 1-10\n\tconst [speed, setSpeed] = useState(8); // 10 - 1\n\tconst [running, setRunning] = useState(false);\n\tconst [array, setArray] = useState([]);\n\n\tconst dispatch = ({ type, data }) => {\n\t\tswitch (type) {\n\t\t\tcase \"reset\":\n\t\t\t\tif (!running) setNewArray((prev) => !prev);\n\t\t\t\tbreak;\n\t\t\tcase \"algoType\":\n\t\t\t\tif (!running) setAlgoType(data);\n\t\t\t\tbreak;\n\t\t\tcase \"size\":\n\t\t\t\tif (!running) {\n\t\t\t\t\tsetNewArray(true);\n\t\t\t\t\tsetSize(data);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"speed\":\n\t\t\t\tsetSpeed(data);\n\t\t\t\tbreak;\n\t\t\tcase \"start\":\n\t\t\t\tif (algoType !== \"\") setRunning(true);\n\t\t\t\tbreak;\n\t\t\tcase \"stop\":\n\t\t\t\tif (algoType !== \"\") setRunning(false);\n\t\t\t\tbreak;\n\t\t\tcase \"array\":\n\t\t\t\tif (running || newArray) setArray(data);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"What are you doing?\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AppContext.Provider\n\t\t\t\tvalue={{ newArray, size, speed, running, algoType, dispatch, array }}\n\t\t\t>\n\t\t\t\t<Header />\n\t\t\t\t<main className=\"Main\">\n\t\t\t\t\t<Grid />\n\t\t\t\t\t<SideBar />\n\t\t\t\t</main>\n\t\t\t</AppContext.Provider>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}